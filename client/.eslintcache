[{"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\index.js":"1","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\Routes.js":"2","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\serviceWorker.js":"3","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\core\\landingPage\\Parallax.js":"4","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\auth\\helper\\index.js":"5","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\auth\\VerifyEmail.js":"6","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\auth\\helper\\verifyEmailAPIcalls.js":"7","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\core\\landingPage\\LandingPage.js":"8","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\core\\landingPage\\Base.js":"9","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\user\\Login.js":"10","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\core\\NotFound.js":"11","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\core\\landingPage\\Navigation.js":"12","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\user\\Signup.js":"13","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\auth\\ForgotPassword.js":"14","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\auth\\ResetPassword.js":"15","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\auth\\helper\\forgotPasswordAPIcalls.js":"16","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\auth\\helper\\PrivateRoute.js":"17","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\auth\\helper\\AdminRoute.js":"18","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\user\\DashboardUser.js":"19","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\auth\\helper\\ProtectedRoute.js":"20","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\user\\VerifyEmailError.js":"21","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\core\\Footer.js":"22","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\core\\BaseWrapper.js":"23","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\core\\NavigationMain.js":"24","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\core\\TopBar.js":"25","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\user\\MyResumes.js":"26","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\user\\Templates.js":"27","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\core\\TemplateCard.js":"28","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\user\\CreateResume.js":"29","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\admin\\DashboardAdmin.js":"30","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\user\\helper\\userAPICalls.js":"31","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\core\\PDFpreviewModal.js":"32","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\pdfGenration\\templates\\Template1.js":"33","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\pdfGenration\\PDFpreview.js":"34","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\user\\DownloadPDF.js":"35","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\pdfGenration\\PDFDownloadButton.js":"36","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\user\\UpdateResume.js":"37","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\user\\TotalResumeChart.js":"38","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\user\\PolarTemplateChart.js":"39","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\pdfGenration\\templates\\Template2.js":"40","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\pdfGenration\\templates\\Template3.js":"41","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\pdfGenration\\templates\\Template5.js":"42","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\pdfGenration\\templates\\Template4.js":"43","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\pdfGenration\\templates\\Template6.js":"44","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\core\\ContactUs.js":"45","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\core\\helper\\apicalls.js":"46","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\user\\TotalResumeMonthBarChart.js":"47","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\admin\\AllUsers.js":"48","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\admin\\AllResumes.js":"49","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\admin\\helper\\apicalls.js":"50","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\core\\NumberCard.js":"51","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\admin\\RegistrationActivityChart.js":"52","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\admin\\VerificationHourlyChart.js":"53","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\admin\\HourResumeChart.js":"54","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\admin\\AllResumesChartTemplates.js":"55","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\admin\\AllResumeChart.js":"56","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\admin\\UsersChart.js":"57","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\core\\SocialCard.js":"58","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\user\\Profile.js":"59"},{"size":565,"mtime":1608355415480,"results":"60","hashOfConfig":"61"},{"size":2798,"mtime":1611042972639,"results":"62","hashOfConfig":"61"},{"size":5086,"mtime":499162500000,"results":"63","hashOfConfig":"61"},{"size":580,"mtime":1606900298572,"results":"64","hashOfConfig":"61"},{"size":1141,"mtime":1611042309875,"results":"65","hashOfConfig":"61"},{"size":2718,"mtime":1607235564251,"results":"66","hashOfConfig":"61"},{"size":300,"mtime":1606709958686,"results":"67","hashOfConfig":"61"},{"size":5002,"mtime":1606899020744,"results":"68","hashOfConfig":"61"},{"size":429,"mtime":1607246269283,"results":"69","hashOfConfig":"61"},{"size":5006,"mtime":1607655446362,"results":"70","hashOfConfig":"61"},{"size":138,"mtime":1607246536502,"results":"71","hashOfConfig":"61"},{"size":2610,"mtime":1610430388131,"results":"72","hashOfConfig":"61"},{"size":5803,"mtime":1606975744839,"results":"73","hashOfConfig":"61"},{"size":3455,"mtime":1610515084950,"results":"74","hashOfConfig":"61"},{"size":6342,"mtime":1608437076881,"results":"75","hashOfConfig":"61"},{"size":817,"mtime":1608436869703,"results":"76","hashOfConfig":"61"},{"size":1128,"mtime":1611035365267,"results":"77","hashOfConfig":"61"},{"size":587,"mtime":1611035483346,"results":"78","hashOfConfig":"61"},{"size":4472,"mtime":1610442680224,"results":"79","hashOfConfig":"61"},{"size":559,"mtime":1607230698975,"results":"80","hashOfConfig":"61"},{"size":1038,"mtime":1607246332685,"results":"81","hashOfConfig":"61"},{"size":1507,"mtime":1610431560608,"results":"82","hashOfConfig":"61"},{"size":609,"mtime":1607422674944,"results":"83","hashOfConfig":"61"},{"size":3558,"mtime":1610686254241,"results":"84","hashOfConfig":"61"},{"size":2161,"mtime":1610515192781,"results":"85","hashOfConfig":"61"},{"size":12253,"mtime":1610693049108,"results":"86","hashOfConfig":"61"},{"size":2403,"mtime":1609928159177,"results":"87","hashOfConfig":"61"},{"size":535,"mtime":1609823581408,"results":"88","hashOfConfig":"61"},{"size":46822,"mtime":1610185138109,"results":"89","hashOfConfig":"61"},{"size":19087,"mtime":1610950568531,"results":"90","hashOfConfig":"61"},{"size":2273,"mtime":1611041633042,"results":"91","hashOfConfig":"61"},{"size":1226,"mtime":1608442436533,"results":"92","hashOfConfig":"61"},{"size":10647,"mtime":1609128630596,"results":"93","hashOfConfig":"61"},{"size":1890,"mtime":1609928055576,"results":"94","hashOfConfig":"61"},{"size":2829,"mtime":1609828671156,"results":"95","hashOfConfig":"61"},{"size":2767,"mtime":1609928133107,"results":"96","hashOfConfig":"61"},{"size":48079,"mtime":1610185323086,"results":"97","hashOfConfig":"61"},{"size":1191,"mtime":1610438559338,"results":"98","hashOfConfig":"61"},{"size":1091,"mtime":1609927483978,"results":"99","hashOfConfig":"61"},{"size":9358,"mtime":1609243382592,"results":"100","hashOfConfig":"61"},{"size":12286,"mtime":1610099247367,"results":"101","hashOfConfig":"61"},{"size":12463,"mtime":1610098853680,"results":"102","hashOfConfig":"61"},{"size":12661,"mtime":1610004362430,"results":"103","hashOfConfig":"61"},{"size":12743,"mtime":1610174847484,"results":"104","hashOfConfig":"61"},{"size":8244,"mtime":1611031752650,"results":"105","hashOfConfig":"61"},{"size":266,"mtime":1610428783672,"results":"106","hashOfConfig":"61"},{"size":1720,"mtime":1610774645196,"results":"107","hashOfConfig":"61"},{"size":11100,"mtime":1610690695070,"results":"108","hashOfConfig":"61"},{"size":13638,"mtime":1610694095522,"results":"109","hashOfConfig":"61"},{"size":672,"mtime":1610516163577,"results":"110","hashOfConfig":"61"},{"size":1624,"mtime":1610782242053,"results":"111","hashOfConfig":"61"},{"size":1334,"mtime":1610882878261,"results":"112","hashOfConfig":"61"},{"size":1723,"mtime":1610883064862,"results":"113","hashOfConfig":"61"},{"size":1308,"mtime":1610949783582,"results":"114","hashOfConfig":"61"},{"size":1305,"mtime":1610951321832,"results":"115","hashOfConfig":"61"},{"size":1168,"mtime":1610950893752,"results":"116","hashOfConfig":"61"},{"size":1739,"mtime":1610950675363,"results":"117","hashOfConfig":"61"},{"size":776,"mtime":1611031192034,"results":"118","hashOfConfig":"61"},{"size":5348,"mtime":1611042967449,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"2y12zn",{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"122"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"135"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"122"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"135"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"122"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"122"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\index.js",[],["252","253"],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\Routes.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\serviceWorker.js",[],["254","255"],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\core\\landingPage\\Parallax.js",[],["256","257"],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\auth\\helper\\index.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\auth\\VerifyEmail.js",[],["258","259"],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\auth\\helper\\verifyEmailAPIcalls.js",[],["260","261"],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\core\\landingPage\\LandingPage.js",[],["262","263"],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\core\\landingPage\\Base.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\user\\Login.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\core\\NotFound.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\core\\landingPage\\Navigation.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\user\\Signup.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\auth\\ForgotPassword.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\auth\\ResetPassword.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\auth\\helper\\forgotPasswordAPIcalls.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\auth\\helper\\PrivateRoute.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\auth\\helper\\AdminRoute.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\user\\DashboardUser.js",["264","265","266"],"import React, { useEffect, useState } from \"react\";\r\nimport { isAutheticated } from \"../auth/helper\";\r\nimport BaseWrapper from \"../core/BaseWrapper\";\r\nimport \"./css/dashboard.css\";\r\nimport { getResumesByUser } from \"./helper/userAPICalls\";\r\nimport TotalResumeChart from \"./TotalResumeChart\";\r\nimport PolarTemplateChart from \"./PolarTemplateChart\";\r\nimport TotalResumeMonthBarChart from \"./TotalResumeMonthBarChart\";\r\n\r\nconst DashboardUser = () => {\r\n  const { token, user } = isAutheticated();\r\n  const [resumes, setResumes] = useState([]);\r\n  const [indicators, setIndicators] = useState({\r\n    loading: \"\",\r\n    success: \"\",\r\n    error: \"\",\r\n  });\r\n  const { loading, error, success } = indicators;\r\n\r\n  const [chartsData, setChartsData] = useState({\r\n    labels: [],\r\n    dataSets: [],\r\n    maxTicks: \"\",\r\n    templateData: [],\r\n  });\r\n\r\n  const { labels, dataSets, maxTicks, templateData } = chartsData;\r\n\r\n  useEffect(() => {\r\n    setIndicators({ ...indicators, loading: true, error: \"\", success: \"\" });\r\n    getResumesByUser(token, user.id).then((data) => {\r\n      if (data.error) {\r\n        setIndicators({\r\n          ...indicators,\r\n          loading: false,\r\n          error: data.error,\r\n          success: false,\r\n        });\r\n      } else {\r\n        setResumes(data);\r\n        setIndicators({\r\n          ...indicators,\r\n          loading: false,\r\n          success: true,\r\n          error: false,\r\n        });\r\n      }\r\n    });\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  const formatDate = (date) => {\r\n    var dd = date.getDate();\r\n    var mm = date.getMonth() + 1;\r\n    var yyyy = date.getFullYear();\r\n    if (dd < 10) {\r\n      dd = \"0\" + dd;\r\n    }\r\n    if (mm < 10) {\r\n      mm = \"0\" + mm;\r\n    }\r\n    date = mm + \"/\" + dd + \"/\" + yyyy;\r\n    return date;\r\n  };\r\n  const getLast7Days = () => {\r\n    let result = [];\r\n    for (let i = 0; i < 7; i++) {\r\n      let d = new Date();\r\n      d.setDate(d.getDate() - i);\r\n      result.unshift(formatDate(d));\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const getData = () => {\r\n    let tempArray = [];\r\n    let dataLabel = getLast7Days();\r\n    if (resumes.length !== 0) {\r\n      for (let i = 0; i <= getLast7Days().length - 1; i++) {\r\n        tempArray[i] = resumes.filter(\r\n          (resume) => formatDate(new Date(resume.date)) === dataLabel[i]\r\n        ).length;\r\n      }\r\n    }\r\n    return tempArray;\r\n  };\r\n\r\n  const getMaxTicks = () => {\r\n    if (getData().length !== 0) {\r\n      return Math.max(...getData());\r\n    }\r\n  };\r\n\r\n  const getTemplateData = () => {\r\n    let tempArray = [];\r\n    if (resumes.length !== 0) {\r\n      for (let i = 0; i <= 5; i++) {\r\n        tempArray[i] = resumes.filter(\r\n          (resume) => resume.resumeTemplate === i + 1\r\n        ).length;\r\n      }\r\n    }\r\n    return tempArray;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (resumes.length !== 0) {\r\n      setChartsData({\r\n        ...chartsData,\r\n        labels: getLast7Days(),\r\n        dataSets: getData(),\r\n        maxTicks: getMaxTicks(),\r\n        templateData: getTemplateData(),\r\n      });\r\n    }\r\n    getData();\r\n    //eslint-disable-next-line\r\n  }, [resumes]);\r\n\r\n  return (\r\n    <BaseWrapper>\r\n      <div className=\"dashboard-main-wrapper\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 dashboard-main-page-title\">Dashboard</div>\r\n          <div className=\"col s12 m7 row dashboard-right-main\">\r\n            <div className=\"card \">\r\n              <div className=\"card-content white-text\">\r\n                <TotalResumeChart\r\n                  labels={labels}\r\n                  dataSets={dataSets}\r\n                  maxTicks={maxTicks}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col s12 m5 dashboard-left-main\">\r\n            <div className=\"card \">\r\n              <div className=\"card-content white-text\">\r\n                <PolarTemplateChart dataSets={templateData} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m5 hide-on-small-only\"></div>\r\n          <div className=\"col s12 m7 dashboard-line-chart\">\r\n            <div className=\"card\">\r\n              <div className=\"card-content white-text dashboard-line-chart-card\">\r\n                <TotalResumeMonthBarChart resumes={resumes} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </BaseWrapper>\r\n  );\r\n};\r\n\r\nexport default DashboardUser;\r\n","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\auth\\helper\\ProtectedRoute.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\user\\VerifyEmailError.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\core\\Footer.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\core\\BaseWrapper.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\core\\NavigationMain.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\core\\TopBar.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\user\\MyResumes.js",["267"],"import React, { useEffect, useState } from \"react\";\r\nimport { isAutheticated } from \"../auth/helper\";\r\nimport { deleteResume, getResumesByUser } from \"./helper/userAPICalls\";\r\nimport BaseWrapper from \"../core/BaseWrapper\";\r\nimport \"./css/myResumes.css\";\r\nimport M from \"materialize-css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Fragment } from \"react\";\r\n\r\nconst MyResumes = () => {\r\n  const { token, user } = isAutheticated();\r\n  const [resumes, setResumes] = useState([]);\r\n  const [fixResumes, setFixResumes] = useState([]);\r\n  const [indicators, setIndicators] = useState({\r\n    loading: \"\",\r\n    success: \"\",\r\n    error: \"\",\r\n  });\r\n  const { loading, success, error } = indicators;\r\n\r\n  const [del, setDel] = useState({\r\n    errorDel: \"\",\r\n    successDel: \"\",\r\n    refetch: false,\r\n  });\r\n\r\n  const { errorDel, successDel, refetch } = del;\r\n\r\n  //ERROR MESSAGE\r\n  useEffect(() => {\r\n    if (errorDel) {\r\n      M.toast({ html: errorDel, classes: \"red darken-4\" });\r\n    }\r\n  }, [errorDel]);\r\n\r\n  // SUCCESS MESSAGE\r\n  useEffect(() => {\r\n    if (successDel) {\r\n      M.toast({ html: \"Successfully Deleted\", classes: \"green darken-4\" });\r\n    }\r\n  }, [successDel]);\r\n\r\n  //FETCHING RESUMES\r\n  useEffect(() => {\r\n    setIndicators({ ...indicators, loading: true, success: \"\" });\r\n    setTimeout(() => {\r\n      getResumesByUser(token, user.id).then((data) => {\r\n        if (data.error) {\r\n          setIndicators({\r\n            ...indicators,\r\n            error: data.error,\r\n            loading: false,\r\n          });\r\n        } else {\r\n          setFixResumes(data);\r\n          setResumes(data);\r\n          setIndicators({\r\n            ...indicators,\r\n            loading: false,\r\n            success: true,\r\n            error: \"\",\r\n          });\r\n        }\r\n      });\r\n    }, 100);\r\n\r\n    //eslint-disable-next-line\r\n  }, [refetch]);\r\n\r\n  // Materealize options\r\n  useEffect(() => {\r\n    let elems = document.querySelectorAll(\"select\");\r\n    let instances = M.FormSelect.init(elems, {});\r\n    return () => {\r\n      instances.map((instance) => {\r\n        return instance.destroy();\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  const deleteCon = (resumeId) => (e) => {\r\n    e.preventDefault();\r\n    let result = window.confirm(\"Are you sure you want to delete resume\");\r\n    if (result) {\r\n      setDel({ ...del, errorDel: \"\", successDel: \"\" });\r\n      deleteResume(token, user.id, resumeId).then((data) => {\r\n        if (data.error) {\r\n          setDel({ ...del, errorDel: data.error, successDel: false });\r\n        } else {\r\n          setDel({\r\n            ...del,\r\n            errorDel: false,\r\n            successDel: data.message,\r\n            refetch: !refetch,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const getComponent = () => {\r\n    if (loading) {\r\n      return (\r\n        <tr>\r\n          <td colSpan=\"5\">\r\n            <div className=\"spinner\">\r\n              <div className=\"bounce1\"></div>\r\n              <div className=\"bounce2\"></div>\r\n              <div className=\"bounce3\"></div>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      );\r\n    } else if (success) {\r\n      if (resumes.length !== 0) {\r\n        return resumes.map((resume, index) => {\r\n          return (\r\n            <tr key={index}>\r\n              <td>{index + 1}</td>\r\n              <td>{resume.firstname + \" \" + resume.lastname}</td>\r\n              <td>{getResumeType(resume.resumeTemplate)}</td>\r\n              <td>\r\n                {resume.date ? getDateinFormat(new Date(resume.date)) : \"\"}\r\n              </td>\r\n              <td className=\"action-section\">\r\n                <Link className=\"btn-flat\" to={`/user/download/${resume._id}`}>\r\n                  <i className=\"fas fa-file-download my-resume-download-icon\"></i>\r\n                </Link>\r\n                <Link to={`/user/updateresume/${resume._id}`}>\r\n                  <i className=\"fas fa-edit my-resume-edit-icon text-blue\"></i>\r\n                </Link>\r\n                <button className=\"btn-flat\" onClick={deleteCon(resume._id)}>\r\n                  <i className=\"fas fa-trash-alt  red-text darken-4\"></i>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          );\r\n        });\r\n      } else {\r\n        return (\r\n          <tr>\r\n            <td colSpan=\"5\" className=\"center\">\r\n              No Data Found\r\n            </td>\r\n          </tr>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const getResumeType = (templateId) => {\r\n    switch (templateId) {\r\n      case 1:\r\n        return \"Basic\";\r\n      case 2:\r\n        return \"Basic Colors\";\r\n      case 3:\r\n        return \"The Advance\";\r\n      case 4:\r\n        return \"The More Advance\";\r\n      case 5:\r\n        return \"Beauty of Simplicity\";\r\n      case 6:\r\n        return \"The Funk\";\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const getDateinFormat = (date) => {\r\n    const shortMonths = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ];\r\n    let newDate =\r\n      date.getDate() +\r\n      \"-\" +\r\n      shortMonths[date.getMonth()] +\r\n      \"-\" +\r\n      date.getFullYear();\r\n    return newDate;\r\n  };\r\n\r\n  const mainTable = (\r\n    <table className=\"highlight responsive-table my-resume-main-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>S.No.</th>\r\n          <th>Name</th>\r\n          <th>Template</th>\r\n          <th>Date of Creation</th>\r\n          <th>Action</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>{getComponent()}</tbody>\r\n    </table>\r\n  );\r\n\r\n  //FILTER\r\n  const setFillter = (field) => (e) => {\r\n    let tempArray = [];\r\n    e.preventDefault();\r\n    switch (field) {\r\n      case \"template\":\r\n        tempArray = fixResumes.filter(\r\n          (resumes) => resumes.resumeTemplate === parseInt(e.target.value)\r\n        );\r\n        setResumes(tempArray);\r\n        break;\r\n\r\n      case \"date\":\r\n        if (e.target.value === \"today\") {\r\n          tempArray = fixResumes.filter(\r\n            (resumes) =>\r\n              new Date(resumes.date).getDate() === new Date().getDate() &&\r\n              new Date(resumes.date).getMonth() === new Date().getMonth() &&\r\n              new Date(resumes.date).getFullYear() === new Date().getFullYear()\r\n          );\r\n          setResumes(tempArray);\r\n        } else if (e.target.value === \"last7Days\") {\r\n          tempArray = fixResumes.filter(\r\n            (resumes) =>\r\n              new Date(resumes.date).getDate() >= new Date().getDate() - 7 &&\r\n              new Date(resumes.date).getDate() <= new Date().getDate() &&\r\n              new Date(resumes.date).getMonth() === new Date().getMonth() &&\r\n              new Date(resumes.date).getFullYear() === new Date().getFullYear()\r\n          );\r\n          setResumes(tempArray);\r\n        } else if (e.target.value === \"thisMonth\") {\r\n          tempArray = fixResumes.filter(\r\n            (resumes) =>\r\n              new Date(resumes.date).getMonth() === new Date().getMonth() &&\r\n              new Date(resumes.date).getFullYear() === new Date().getFullYear()\r\n          );\r\n          setResumes(tempArray);\r\n        } else if (e.target.value === \"thisYear\") {\r\n          tempArray = fixResumes.filter(\r\n            (resumes) =>\r\n              new Date(resumes.date).getFullYear() === new Date().getFullYear()\r\n          );\r\n          setResumes(tempArray);\r\n        }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const clearFilter = (e) => {\r\n    e.preventDefault();\r\n    setResumes(fixResumes);\r\n  };\r\n  //FILTER OPTIONS\r\n  const templateOptions = [\r\n    { value: 1, tag: \"Basic\" },\r\n    { value: 2, tag: \"Basic Colors\" },\r\n    { value: 3, tag: \"The Advance\" },\r\n    { value: 4, tag: \"The More Advance\" },\r\n    { value: 5, tag: \"Beauty of Simplicity\" },\r\n    { value: 6, tag: \"The Funk\" },\r\n  ];\r\n  const dateOptions = [\r\n    { value: \"today\", tag: \"Today\" },\r\n    { value: \"last7Days\", tag: \"Last 7 Days\" },\r\n    { value: \"thisMonth\", tag: \"This Month\" },\r\n    {\r\n      value: \"thisYear\",\r\n      tag: \"This Year\",\r\n    },\r\n  ];\r\n\r\n  const getFilters = (\r\n    <Fragment>\r\n      <div className=\"input-field col s6 m2\">\r\n        <select\r\n          value=\"hi\"\r\n          onChange={setFillter(\"template\")}\r\n          className=\"reset-filter\"\r\n        >\r\n          <option value=\"\">Select one</option>\r\n          {templateOptions.map((option) => {\r\n            return (\r\n              <option key={option.value} value={option.value}>\r\n                {option.tag}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n        <label>By Template Type</label>\r\n      </div>\r\n      <div className=\"input-field col s6 m2\">\r\n        <select value=\"\" onChange={setFillter(\"date\")} className=\"reset-filter\">\r\n          <option value=\"\">Select one</option>\r\n          {dateOptions.map((option) => {\r\n            return (\r\n              <option key={option.value} value={option.value}>\r\n                {option.tag}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n        <label>By Date</label>\r\n      </div>\r\n      <div className=\"col s12 m2 center my-resume-filter-clear-col\">\r\n        <button\r\n          onClick={clearFilter}\r\n          className=\"waves-effect waves-light btn my-resume-filter-clear\"\r\n        >\r\n          Clear\r\n        </button>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n\r\n  //SORT\r\n  const setSort = (e) => {\r\n    e.preventDefault();\r\n    let tempArray = [];\r\n    let sort = e.target.value;\r\n    switch (sort) {\r\n      case \"byNameA_Z\":\r\n        tempArray = [...resumes].sort((a, b) =>\r\n          a.firstname > b.firstname ? 1 : b.firstname > a.firstname ? -1 : 0\r\n        );\r\n        setResumes(tempArray);\r\n        break;\r\n      case \"byNameZ_A\":\r\n        tempArray = [...resumes].sort((a, b) =>\r\n          a.firstname > b.firstname ? -1 : b.firstname > a.firstname ? 1 : 0\r\n        );\r\n        setResumes(tempArray);\r\n        break;\r\n      case \"byDateAsc\":\r\n        tempArray = [...resumes].sort((a, b) =>\r\n          new Date(a.date) > new Date(b.date)\r\n            ? 1\r\n            : new Date(b.date) > new Date(a.date)\r\n            ? -1\r\n            : 0\r\n        );\r\n        setResumes(tempArray);\r\n        break;\r\n      case \"byDateDesc\":\r\n        tempArray = [...resumes].sort((a, b) =>\r\n          new Date(a.date) > new Date(b.date)\r\n            ? -1\r\n            : new Date(b.date) > new Date(a.date)\r\n            ? 1\r\n            : 0\r\n        );\r\n        setResumes(tempArray);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const sortOptions = [\r\n    { value: \"byNameA_Z\", tag: \"By Name A-Z\" },\r\n    { value: \"byNameZ_A\", tag: \"By Name Z-A\" },\r\n    { value: \"byDateAsc\", tag: \"By Date (Ascending)\" },\r\n    { value: \"byDateDesc\", tag: \"By Date (Descending)\" },\r\n  ];\r\n  const getSort = (\r\n    <Fragment>\r\n      <div className=\"input-field col s6 m2\">\r\n        <select value=\"hi\" onChange={setSort} className=\"reset-filter\">\r\n          <option value=\"\">Select one</option>\r\n          {sortOptions.map((option) => {\r\n            return (\r\n              <option key={option.value} value={option.value}>\r\n                {option.tag}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n        <label>Sort By</label>\r\n      </div>\r\n      <div className=\"col s6 m2 center my-resume-filter-clear-col\">\r\n        <button\r\n          onClick={clearFilter}\r\n          className=\"waves-effect waves-light btn my-resume-filter-clear\"\r\n        >\r\n          Clear\r\n        </button>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n\r\n  return (\r\n    <BaseWrapper>\r\n      <div className=\"my-resume-main-wrapper\">\r\n        <div className=\"my-resume-main-heading\">My Resumes</div>\r\n        <div className=\"row\">\r\n          <div className=\"row my-resume-filter-row \">\r\n            <div className=\"col s12 my-resume-filter-heading \">Filters</div>\r\n            {getFilters}\r\n          </div>\r\n          <div className=\"row my-resume-sort-row\">\r\n            <div className=\"col s12 my-resume-filter-heading \">Sort</div>\r\n            {getSort}\r\n          </div>\r\n\r\n          <div className=\"col s12 m12 my-resume-main-table-section\">\r\n            {mainTable}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </BaseWrapper>\r\n  );\r\n};\r\n\r\nexport default MyResumes;\r\n","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\user\\Templates.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\core\\TemplateCard.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\user\\CreateResume.js",["268","269","270","271","272"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\nimport BaseWrapper from \"../core/BaseWrapper\";\r\nimport M from \"materialize-css\";\r\nimport \"./css/createResume.css\";\r\nimport { isAutheticated } from \"../auth/helper\";\r\nimport { saveResumeInfo } from \"./helper/userAPICalls\";\r\nimport PDFpreviewModal from \"../core/PDFpreviewModal\";\r\n\r\nconst CreateResume = () => {\r\n  const { templateId } = useParams();\r\n  const { user, token } = isAutheticated();\r\n\r\n  //MAIN RESUME DATA SET STATE\r\n  const [resume, setResume] = useState({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    contact_details: {\r\n      email: \"\",\r\n      mobile: \"\",\r\n    },\r\n    address: {\r\n      line_1: \"\",\r\n      line_2: \"\",\r\n      line_3: \"\",\r\n      city: \"\",\r\n      state: \"\",\r\n    },\r\n    profession: \"\",\r\n    discription: \"\",\r\n    academic_qualification: [],\r\n    experience: [],\r\n    fresher: false,\r\n    certificates_diplomas: [],\r\n    skills: [],\r\n    date: new Date(Date.now()).toISOString(),\r\n    resumeTemplate: parseInt(templateId),\r\n    user: user.id,\r\n  });\r\n\r\n  //DESTRUCTURING RESUME DATA\r\n  const {\r\n    firstname,\r\n    lastname,\r\n    contact_details,\r\n    address,\r\n    profession,\r\n    discription,\r\n    academic_qualification,\r\n    experience,\r\n    fresher,\r\n    certificates_diplomas,\r\n    skills,\r\n  } = resume;\r\n\r\n  //ON SAVE RESPONSE MANAGEMENT STATE\r\n  const [indicators, setIndicators] = useState({\r\n    loading: \"\",\r\n    error: \"\",\r\n    success: \"\",\r\n    redirect: \"\",\r\n    preview: false,\r\n  });\r\n  //DESTRUCTURING ON SAVE RESPONSE MANAGEMENT STATE\r\n  const { loading, error, success, redirect, preview } = indicators;\r\n\r\n  // SUB REESUME DATA EDUCATION SECTION STATE\r\n  const [education, setEducation] = useState({\r\n    qualification_title: \"\",\r\n    institute: \"\",\r\n    board: \"\",\r\n    passing_year: \"\",\r\n\r\n    eid: \"\",\r\n  });\r\n\r\n  //DESTRUCTURING EDUCATION DATA\r\n  const {\r\n    qualification_title,\r\n    institute,\r\n    board,\r\n    passing_year,\r\n    eid,\r\n  } = education;\r\n\r\n  // SUB RESUME DATA EXPERIENCE SECTION STATE\r\n\r\n  const [exp, setExp] = useState({\r\n    organisation: \"\",\r\n    position: \"\",\r\n    work_details: [],\r\n    joining_month: \"null\",\r\n    joining_year: \"null\",\r\n    leaving_month: \"null\",\r\n    leaving_year: \"null\",\r\n    exp_id: \"\",\r\n  });\r\n\r\n  //DESTRUCTURING EXPERIENCE DATA\r\n  const {\r\n    organisation,\r\n    position,\r\n    work_details,\r\n    joining_month,\r\n    joining_year,\r\n    leaving_month,\r\n    leaving_year,\r\n    exp_id,\r\n  } = exp;\r\n\r\n  const [workList, setWorkList] = useState({\r\n    workDetail: \"\",\r\n    work_id: \"\",\r\n  });\r\n\r\n  const { workDetail, work_id } = workList;\r\n\r\n  //SKILL DATA STATE\r\n  const [skills_sub, setSkills_sub] = useState({\r\n    skill: \"\",\r\n    skill_level: \"0\",\r\n    skill_id: \"\",\r\n  });\r\n\r\n  //DESTRUCTURING SKILL\r\n  const { skill, skill_level, skill_id } = skills_sub;\r\n\r\n  //Diploma DATA STATE\r\n  const [diplomas, setDiplomas] = useState({\r\n    diploma_title: \"\",\r\n    diploma_institute: \"\",\r\n    course_duration: \"\",\r\n    date_of_completion: \"\",\r\n    diploma_id: \"\",\r\n  });\r\n\r\n  //DESTRUCTURING SKILL\r\n  const {\r\n    diploma_title,\r\n    diploma_institute,\r\n    course_duration,\r\n    date_of_completion,\r\n    diploma_id,\r\n  } = diplomas;\r\n\r\n  // MATERILIZE CSS TEXT COUNTER\r\n  useEffect(() => {\r\n    const textCounter = document.querySelector(\" #create_resume_short_pitch \");\r\n    M.CharacterCounter.init(textCounter);\r\n  }, []);\r\n\r\n  // MATERILIZE CSS OPTIONS\r\n  useEffect(() => {\r\n    let elem = document.querySelectorAll(\"select\");\r\n    let insct = M.FormSelect.init(elem, {});\r\n    return () => {\r\n      insct.map((ins) => {\r\n        return ins.destroy();\r\n      });\r\n    };\r\n  }, [fresher]);\r\n\r\n  //ERROR ON SAVING DETAILS\r\n  useEffect(() => {\r\n    if (error) {\r\n      M.toast({\r\n        html: error,\r\n        classes: \" red darken-4\",\r\n      });\r\n      setIndicators({ ...indicators, error: \"\" });\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [error]);\r\n\r\n  // MATERILIZE CSS RANGE SLIDER\r\n  useEffect(() => {\r\n    let elems = document.querySelectorAll(\"input[type=range]\");\r\n    M.Range.init(elems);\r\n  }, []);\r\n\r\n  // MATERILIZE CSS UPDATE TEXT FILED\r\n  useEffect(() => {\r\n    M.updateTextFields();\r\n  }, []);\r\n\r\n  const performRedirect = () => {\r\n    if (success) {\r\n      return <Redirect to={`/user/download/${redirect}`} />;\r\n    }\r\n  };\r\n\r\n  //STATE CHANGE  HANDLER\r\n  const changeHandler = (field, section) => (e) => {\r\n    switch (section) {\r\n      case \"edu\":\r\n        setEducation({\r\n          ...education,\r\n          [field]: e.target.value,\r\n          eid: Math.floor(100000000 + Math.random() * 900000000),\r\n        });\r\n        break;\r\n\r\n      case \"exp\":\r\n        setExp({\r\n          ...exp,\r\n          [field]: e.target.value,\r\n          exp_id: Math.floor(100000000 + Math.random() * 900000000),\r\n        });\r\n        break;\r\n      case \"work\":\r\n        setWorkList({\r\n          ...workList,\r\n          [field]: e.target.value,\r\n          work_id: Math.floor(100000000 + Math.random() * 900000000),\r\n        });\r\n        break;\r\n\r\n      case \"fresher\":\r\n        setResume({ ...resume, [field]: !fresher });\r\n        break;\r\n\r\n      case \"dips\":\r\n        setDiplomas({\r\n          ...diplomas,\r\n          [field]: e.target.value,\r\n          diploma_id: Math.floor(100000000 + Math.random() * 900000000),\r\n        });\r\n\r\n        break;\r\n\r\n      case \"skills\":\r\n        setSkills_sub({\r\n          ...skills_sub,\r\n          [field]: e.target.value,\r\n          skill_id: Math.floor(100000000 + Math.random() * 900000000),\r\n        });\r\n        break;\r\n\r\n      case \"basic\":\r\n        setResume({ ...resume, [field]: e.target.value });\r\n        break;\r\n\r\n      case \"contact\":\r\n        setResume({\r\n          ...resume,\r\n          contact_details: { ...contact_details, [field]: e.target.value },\r\n        });\r\n        break;\r\n      case \"address\":\r\n        setResume({\r\n          ...resume,\r\n          address: { ...address, [field]: e.target.value },\r\n        });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  // ADD INFO\r\n  const addInfo = (section) => (e) => {\r\n    let tempArry;\r\n    let eduConditions =\r\n      templateId === \"1\"\r\n        ? qualification_title.trim() === \"\" ||\r\n          institute.trim() === \"\" ||\r\n          board.trim() === \"\" ||\r\n          passing_year.trim() === \"\"\r\n        : qualification_title.trim() === \"\" ||\r\n          institute.trim() === \"\" ||\r\n          passing_year.trim() === \"\";\r\n    let dipsCondition =\r\n      templateId === \"1\"\r\n        ? diploma_title.trim() === \"\" ||\r\n          diploma_institute.trim() === \"\" ||\r\n          course_duration.trim() === \"\" ||\r\n          date_of_completion.trim() === \"\"\r\n        : diploma_title.trim() === \"\" ||\r\n          diploma_institute.trim() === \"\" ||\r\n          date_of_completion.trim() === \"\";\r\n    switch (section) {\r\n      case \"edu\":\r\n        if (eduConditions) {\r\n          M.toast({\r\n            html: \"Please fill all the fields in the section\",\r\n            classes: \"#e65100 orange darken-4\",\r\n          });\r\n        } else {\r\n          tempArry = academic_qualification;\r\n          tempArry.unshift(education);\r\n          setResume({ ...resume, academic_qualification: tempArry });\r\n          setEducation({\r\n            ...education,\r\n            qualification_title: \"\",\r\n            institute: \"\",\r\n            board: \"\",\r\n            passing_year: \"\",\r\n            marks: \"\",\r\n            eid: \"\",\r\n          });\r\n          tempArry = [];\r\n        }\r\n\r\n        break;\r\n      case \"work\":\r\n        if (workDetail.trim() === \"\") {\r\n          M.toast({\r\n            html: \"Please fill the fields\",\r\n            classes: \"#e65100 orange darken-4\",\r\n          });\r\n        } else {\r\n          tempArry = work_details;\r\n          tempArry.unshift(workList);\r\n          setExp({ ...exp, work_details: tempArry });\r\n          setWorkList({\r\n            ...workList,\r\n            workDetail: \"\",\r\n          });\r\n          tempArry = [];\r\n        }\r\n\r\n        break;\r\n\r\n      case \"exp\":\r\n        if (\r\n          organisation.trim() === \"\" ||\r\n          position.trim() === \"\" ||\r\n          joining_month === \"null\" ||\r\n          joining_year === \"null\" ||\r\n          leaving_month === \"null\" ||\r\n          leaving_year === \"null\"\r\n        ) {\r\n          M.toast({\r\n            html: \"Please fill all the fields in the section\",\r\n            classes: \"#e65100 orange darken-4\",\r\n          });\r\n        } else {\r\n          tempArry = experience;\r\n          tempArry.unshift(exp);\r\n          setResume({ ...resume, experience: tempArry });\r\n          setExp({\r\n            ...exp,\r\n            organisation: \"\",\r\n            position: \"\",\r\n            work_details: [],\r\n            joining_month: \"null\",\r\n            joining_year: \"null\",\r\n            leaving_month: \"null\",\r\n            leaving_year: false,\r\n            exp_id: \"\",\r\n          });\r\n\r\n          tempArry = [];\r\n        }\r\n\r\n        break;\r\n      case \"dips\":\r\n        if (dipsCondition) {\r\n          M.toast({\r\n            html: \"Please fill all the fields in the section\",\r\n            classes: \"#e65100 orange darken-4\",\r\n          });\r\n        } else {\r\n          tempArry = certificates_diplomas;\r\n          tempArry.unshift(diplomas);\r\n          setResume({ ...resume, certificates_diplomas: tempArry });\r\n          setDiplomas({\r\n            ...diplomas,\r\n            diploma_title: \"\",\r\n            diploma_institute: \"\",\r\n            course_type: \"\",\r\n            course_duration: \"\",\r\n            date_of_completion: \"\",\r\n            diploma_id: \"\",\r\n          });\r\n          tempArry = [];\r\n        }\r\n\r\n        break;\r\n      case \"skills\":\r\n        if (skill.trim() === \"\") {\r\n          M.toast({\r\n            html: \"Please enter the skill\",\r\n            classes: \"#e65100 orange darken-4\",\r\n          });\r\n        } else {\r\n          tempArry = skills;\r\n          tempArry.unshift(skills_sub);\r\n          setResume({ ...resume, skills: tempArry });\r\n          setSkills_sub({\r\n            ...skills_sub,\r\n            skill: \"\",\r\n            skill_level: \"0\",\r\n            skill_id: \"\",\r\n          });\r\n          tempArry = [];\r\n        }\r\n\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  //REMOVE INFO\r\n  const removeInfo = (id, section) => (e) => {\r\n    e.preventDefault();\r\n    let newArry;\r\n    switch (section) {\r\n      case \"edu\":\r\n        newArry = academic_qualification.filter((edu) => edu.eid !== id);\r\n        setResume({ ...resume, academic_qualification: newArry });\r\n        break;\r\n      case \"exp\":\r\n        newArry = experience.filter((expe) => expe.exp_id !== id);\r\n        setResume({ ...resume, experience: newArry });\r\n        break;\r\n      case \"work\":\r\n        newArry = work_details.filter((w) => w.work_id !== id);\r\n        setExp({ ...exp, work_details: newArry });\r\n        break;\r\n      case \"dips\":\r\n        newArry = certificates_diplomas.filter(\r\n          (dips) => dips.diploma_id !== id\r\n        );\r\n        setResume({ ...resume, certificates_diplomas: newArry });\r\n        break;\r\n      case \"skills\":\r\n        newArry = skills.filter((skill_sub) => skill_sub.skill_id !== id);\r\n        setResume({ ...resume, skills: newArry });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const submitResumeInfo = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      firstname.trim() === \"\" ||\r\n      contact_details.email.trim() === \"\" ||\r\n      contact_details.mobile.trim() === \"\" ||\r\n      profession.trim() === \"\" ||\r\n      discription.trim() === \"\" ||\r\n      address.line_1.trim() === \"\" ||\r\n      address.city.trim() === \"\" ||\r\n      address.state.trim() === \"\"\r\n    ) {\r\n      M.toast({\r\n        html: \"Please fill all the fields in the section\",\r\n        classes: \" orange darken-4\",\r\n      });\r\n    } else {\r\n      setIndicators({ ...indicators, error: \"\", success: \"\", loading: true });\r\n      saveResumeInfo(resume, token, user.id).then((data) => {\r\n        if (data.error) {\r\n          setIndicators({ ...indicators, error: data.error, loading: false });\r\n        } else {\r\n          setIndicators({\r\n            ...indicators,\r\n            loading: false,\r\n            success: true,\r\n            redirect: data,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const getPreview = (e) => {\r\n    // e.preventDefault();\r\n    setIndicators({ ...indicators, preview: !preview });\r\n  };\r\n\r\n  //MONTH ARRAYS FOR SELECT TAG\r\n  const addMonth = () => {\r\n    let months = [];\r\n    let monthName = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    function month(value, label) {\r\n      this.value = value;\r\n      this.label = label;\r\n    }\r\n    for (let i = 1; i <= 12; i++) {\r\n      var m = new month(monthName[i - 1], monthName[i - 1]);\r\n      months.push(m);\r\n    }\r\n    return months;\r\n  };\r\n\r\n  //YEAR ARRAYS FOR SELECT TAG\r\n  const addYears = () => {\r\n    let years = [];\r\n    function year(value, label) {\r\n      this.value = value;\r\n      this.label = label;\r\n    }\r\n    for (let i = 1990; i <= new Date().getFullYear(); i++) {\r\n      let y = new year(i, i);\r\n      years.push(y);\r\n    }\r\n    return years;\r\n  };\r\n\r\n  const basicInfoForm = (\r\n    <div className=\"row basic-template-row\">\r\n      <div className=\" col s12 create-resume-section-heading\">Basic Info</div>\r\n      <div className=\"col s12 m4 offset-m1 input-field\">\r\n        <input\r\n          id=\"create_resume_first_name\"\r\n          type=\"text\"\r\n          className=\"validate\"\r\n          value={firstname}\r\n          onChange={changeHandler(\"firstname\", \"basic\")}\r\n        />\r\n        <label htmlFor=\"create_resume_first_name\">First Name</label>\r\n      </div>\r\n      <div className=\"col s12 m4 input-field\">\r\n        <input\r\n          id=\"create_resume_last_name\"\r\n          type=\"text\"\r\n          className=\"validate\"\r\n          value={lastname}\r\n          onChange={changeHandler(\"lastname\", \"basic\")}\r\n        />\r\n        <label htmlFor=\"create_resume_last_name\">Last Name</label>\r\n      </div>\r\n      <div className=\"col s12 m4 offset-m1 input-field\">\r\n        <input\r\n          id=\"create_resume_profession\"\r\n          type=\"text\"\r\n          className=\"validate\"\r\n          value={profession}\r\n          onChange={changeHandler(\"profession\", \"basic\")}\r\n        />\r\n        <label htmlFor=\"create_resume_profession\">Professional Title</label>\r\n      </div>\r\n      <div className=\"col s12 m4 input-field\">\r\n        <textarea\r\n          id=\"create_resume_short_pitch\"\r\n          className=\"materialize-textarea\"\r\n          data-length=\"500\"\r\n          value={discription}\r\n          onChange={changeHandler(\"discription\", \"basic\")}\r\n        ></textarea>\r\n        <label htmlFor=\"create_resume_short_pitch\">\r\n          Short pitch about yourself\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const contactInfoForm = (\r\n    <div className=\"row basic-template-row\">\r\n      <div className=\"s12 col create-resume-section-heading\">Contact Info</div>\r\n      <div className=\"col s12 m4 offset-m1 input-field\">\r\n        <input\r\n          id=\"create_resume_email\"\r\n          type=\"email\"\r\n          className=\"validate\"\r\n          value={contact_details.email}\r\n          onChange={changeHandler(\"email\", \"contact\")}\r\n        />\r\n        <label htmlFor=\"create_resume_email\">Email</label>\r\n      </div>\r\n      <div className=\"col s12 m4 input-field\">\r\n        <input\r\n          id=\"create_resume_mobile\"\r\n          type=\"text\"\r\n          className=\"validate\"\r\n          value={contact_details.mobile}\r\n          onChange={changeHandler(\"mobile\", \"contact\")}\r\n        />\r\n        <label htmlFor=\"create_resume_mobile\">Mobile Number</label>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const addressInfoForm = (\r\n    <div className=\"row basic-template-row\">\r\n      <div className=\"s12 col create-resume-section-heading\">Address Info</div>\r\n      <div className=\"col s12 m4 offset-m1 input-field\">\r\n        <input\r\n          id=\"create_resume_address_line_1\"\r\n          type=\"text\"\r\n          className=\"validate\"\r\n          value={address.line_1}\r\n          onChange={changeHandler(\"line_1\", \"address\")}\r\n        />\r\n        <label htmlFor=\"create_resume_address_line_1\">Line 1</label>\r\n      </div>\r\n      <div className=\"col s12 m4 input-field\">\r\n        <input\r\n          id=\"create_resume_address_line_2\"\r\n          type=\"text\"\r\n          className=\"validate\"\r\n          value={address.line_2}\r\n          onChange={changeHandler(\"line_2\", \"address\")}\r\n        />\r\n        <label htmlFor=\"create_resume_address_line_2\">Line 2</label>\r\n      </div>\r\n      <div className=\"col s12 m4 offset-m1 input-field\">\r\n        <input\r\n          id=\"create_resume_address_line_3\"\r\n          type=\"text\"\r\n          className=\"validate\"\r\n          value={address.line_3}\r\n          onChange={changeHandler(\"line_3\", \"address\")}\r\n        />\r\n        <label htmlFor=\"create_resume_address_line_3\">Line 3</label>\r\n      </div>\r\n      <div className=\"col s12 m4 input-field\">\r\n        <input\r\n          id=\"create_resume_address_city\"\r\n          type=\"text\"\r\n          className=\"validate\"\r\n          value={address.city}\r\n          onChange={changeHandler(\"city\", \"address\")}\r\n        />\r\n        <label htmlFor=\"create_resume_address_city\">City</label>\r\n      </div>\r\n      <div className=\"col s12 m4 offset-m1 input-field\">\r\n        <input\r\n          id=\"create_resume_address_state\"\r\n          type=\"text\"\r\n          className=\"validate\"\r\n          value={address.state}\r\n          onChange={changeHandler(\"state\", \"address\")}\r\n        />\r\n        <label htmlFor=\"create_resume_address_state\">State</label>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const academicQualificationForm = (\r\n    <div className=\"row basic-template-row\">\r\n      <div className=\"s12 col create-resume-section-heading\">\r\n        Academic Qualification\r\n      </div>\r\n      <div className=\"row education-table-row\">\r\n        <div className=\"col s12 m10 offset-m1 education-table-wrapper\">\r\n          <table className=\"highlight responsive-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Qualification</th>\r\n                <th>School/University</th>\r\n                {templateId === \"1\" && <th>Board</th>}\r\n                <th>Passing Year</th>\r\n\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {academic_qualification.map((data) => {\r\n                return (\r\n                  <tr key={data.eid}>\r\n                    <td>{data.qualification_title}</td>\r\n                    <td>{data.institute}</td>\r\n                    {templateId === \"1\" && <td>{data.board}</td>}\r\n                    <td>{data.passing_year}</td>\r\n\r\n                    <td>\r\n                      <button\r\n                        onClick={removeInfo(data.eid, \"edu\")}\r\n                        className=\"btn-flat  create-resuem-table-remove-btn\"\r\n                      >\r\n                        <i className=\"far fa-trash-alt\"></i>\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div className=\"col s12 m4 offset-m1 input-field\">\r\n        <input\r\n          id=\"create_resume_qualification\"\r\n          type=\"text\"\r\n          className=\"validate\"\r\n          value={qualification_title}\r\n          onChange={changeHandler(\"qualification_title\", \"edu\")}\r\n        />\r\n        <label htmlFor=\"create_resume_qualification\">Qualification</label>\r\n      </div>\r\n      <div className=\"col s12 m4 input-field\">\r\n        <input\r\n          id=\"create_resume_school_collage\"\r\n          type=\"text\"\r\n          className=\"validate\"\r\n          value={institute}\r\n          onChange={changeHandler(\"institute\", \"edu\")}\r\n        />\r\n        <label htmlFor=\"create_resume_school_collage\">\r\n          School/Collage Name\r\n        </label>\r\n      </div>\r\n      {templateId === \"1\" && (\r\n        <div className=\"col s12 m4 offset-m1 input-field\">\r\n          <input\r\n            id=\"create_resume_board_university\"\r\n            type=\"text\"\r\n            className=\"validate\"\r\n            value={board}\r\n            onChange={changeHandler(\"board\", \"edu\")}\r\n          />\r\n          <label htmlFor=\"create_resume_board_university\">\r\n            Board/University\r\n          </label>\r\n        </div>\r\n      )}\r\n      <div\r\n        className={\r\n          templateId !== \"1\"\r\n            ? \"col s12 m4 offset-m1 input-field\"\r\n            : \"col s12 m4  input-field\"\r\n        }\r\n      >\r\n        <input\r\n          id=\"create_resume_passing_year\"\r\n          type=\"text\"\r\n          className=\"validate\"\r\n          value={passing_year}\r\n          onChange={changeHandler(\"passing_year\", \"edu\")}\r\n        />\r\n        <label htmlFor=\"create_resume_passing_year\">Passing Year</label>\r\n      </div>\r\n      <div className=\"col s12 m4 input-field center\">\r\n        <button\r\n          className=\"btn waves-effect waves-light\"\r\n          onClick={addInfo(\"edu\")}\r\n        >\r\n          ADD\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const experianceInfoForm = (\r\n    <div className=\"row basic-template-row\">\r\n      <div className=\"s12 col create-resume-section-heading\">\r\n        Experience Info\r\n      </div>\r\n      <div className=\"row education-table-row\">\r\n        <div className=\"col s12 m4 offset-m1 input-field\">\r\n          <div className=\"smallheading\">Fresher</div>\r\n          <div className=\"switch\">\r\n            <label>\r\n              Off\r\n              <input\r\n                type=\"checkbox\"\r\n                value={fresher}\r\n                onChange={changeHandler(\"fresher\", \"fresher\")}\r\n              />\r\n              <span className=\"lever\"></span>\r\n              On\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {fresher ? (\r\n        \"\"\r\n      ) : (\r\n        <Fragment>\r\n          <div className=\"row education-table-row\">\r\n            <div className=\"col s12 m10 offset-m1 education-table-wrapper\">\r\n              <table className=\"highlight responsive-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Organization</th>\r\n                    <th>Position</th>\r\n                    <th>Joining Date</th>\r\n                    <th>Leaving Date</th>\r\n                    <th>Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {experience.map((expe) => {\r\n                    return (\r\n                      <tr key={expe.exp_id}>\r\n                        <td>{expe.organisation}</td>\r\n                        <td>{expe.position}</td>\r\n                        <td>{expe.joining_month + \",\" + expe.joining_year}</td>\r\n                        <td>{expe.leaving_month + \",\" + expe.leaving_year}</td>\r\n                        <td>\r\n                          <button\r\n                            onClick={removeInfo(expe.exp_id, \"exp\")}\r\n                            className=\"btn-flat create-resuem-table-remove-btn\"\r\n                          >\r\n                            <i className=\"far fa-trash-alt\"></i>\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col s12 m4 offset-m1 input-field\">\r\n              <input\r\n                id=\"create_resume_exp_organozation\"\r\n                type=\"text\"\r\n                className=\"validate\"\r\n                value={organisation}\r\n                onChange={changeHandler(\"organisation\", \"exp\")}\r\n              />\r\n              <label htmlFor=\"create_resume_exp_organozation\">\r\n                Organization\r\n              </label>\r\n            </div>\r\n            <div className=\"col s12 m4 input-field\">\r\n              <input\r\n                id=\"create_resume_exp_position\"\r\n                type=\"text\"\r\n                className=\"validate\"\r\n                value={position}\r\n                onChange={changeHandler(\"position\", \"exp\")}\r\n              />\r\n              <label htmlFor=\"create_resume_exp_position\">Position</label>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col s6 m2 offset-m1 input-field\">\r\n              <select\r\n                value={joining_month}\r\n                onChange={changeHandler(\"joining_month\", \"exp\")}\r\n              >\r\n                <option value=\"null\" disabled>\r\n                  Select Month\r\n                </option>\r\n                {addMonth().map((month) => {\r\n                  return (\r\n                    <option key={month.value} value={month.value}>\r\n                      {month.label}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n\r\n              <label>Joining Month</label>\r\n            </div>\r\n            <div className=\"col s6 m2 input-field\">\r\n              <select\r\n                value={joining_year}\r\n                onChange={changeHandler(\"joining_year\", \"exp\")}\r\n              >\r\n                <option value=\"null\" disabled>\r\n                  Select Year\r\n                </option>\r\n                {addYears().map((year) => {\r\n                  return (\r\n                    <option key={year.value} value={year.value}>\r\n                      {year.label}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n\r\n              <label>Joining Year</label>\r\n            </div>\r\n            <div className=\"col s6 m2  input-field\">\r\n              <select\r\n                value={leaving_month}\r\n                onChange={changeHandler(\"leaving_month\", \"exp\")}\r\n              >\r\n                <option value=\"null\" disabled>\r\n                  Select Month\r\n                </option>\r\n                {addMonth().map((month) => {\r\n                  return (\r\n                    <option key={month.value} value={month.value}>\r\n                      {month.label}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n\r\n              <label>Leaving month</label>\r\n            </div>\r\n            <div className=\"col s6 m2 input-field\">\r\n              <select\r\n                value={leaving_year}\r\n                onChange={changeHandler(\"leaving_year\", \"exp\")}\r\n              >\r\n                <option value=\"null\" disabled>\r\n                  Select Year\r\n                </option>\r\n                {addYears().map((year) => {\r\n                  return (\r\n                    <option key={year.value} value={year.value}>\r\n                      {year.label}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n\r\n              <label>Leaving Year</label>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col s12 m4 offset-m1 input-field\">\r\n            <button\r\n              className=\"btn waves-effect waves-light\"\r\n              onClick={addInfo(\"exp\")}\r\n            >\r\n              ADD\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const experianceInfoFormType2 = (\r\n    <div className=\"row basic-template-row\">\r\n      <div className=\"s12 col create-resume-section-heading\">\r\n        Experience Info\r\n      </div>\r\n      <div className=\"row education-table-row\">\r\n        <div className=\"col s12 m4 offset-m1 input-field\">\r\n          <div className=\"smallheading\">Fresher</div>\r\n          <div className=\"switch\">\r\n            <label>\r\n              Off\r\n              <input\r\n                type=\"checkbox\"\r\n                value={fresher}\r\n                onChange={changeHandler(\"fresher\", \"fresher\")}\r\n              />\r\n              <span className=\"lever\"></span>\r\n              On\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {fresher ? (\r\n        \"\"\r\n      ) : (\r\n        <Fragment>\r\n          <div className=\"row education-table-row\">\r\n            <div className=\"col s12 m10 offset-m1 experience-view-wrapper\">\r\n              {experience.map((expe, index) => {\r\n                return (\r\n                  <div key={index} className=\"row\">\r\n                    <div className=\"col s10 m10\">\r\n                      <div className=\"exp-list-org\">{expe.organisation}</div>\r\n                      <div className=\"exp-list-position\">{expe.position}</div>\r\n\r\n                      <div className=\"exp-list-dates\">\r\n                        {expe.joining_month +\r\n                          \",\" +\r\n                          expe.joining_year +\r\n                          \" - \" +\r\n                          expe.leaving_month +\r\n                          \",\" +\r\n                          expe.leaving_year}\r\n                      </div>\r\n                      <div className=\"exp-list-work-details\">\r\n                        {expe.work_details.map((data, index) => {\r\n                          return <div key={index}>{data.workDetail}</div>;\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col s2 m2\">\r\n                      <button\r\n                        onClick={removeInfo(expe.exp_id, \"exp\")}\r\n                        className=\"btn-flat create-resuem-table-remove-btn\"\r\n                      >\r\n                        <i className=\"far fa-trash-alt\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col s12 m4 offset-m1 input-field\">\r\n              <input\r\n                id=\"create_resume_exp_organozation\"\r\n                type=\"text\"\r\n                className=\"validate\"\r\n                value={organisation}\r\n                onChange={changeHandler(\"organisation\", \"exp\")}\r\n              />\r\n              <label htmlFor=\"create_resume_exp_organozation\">\r\n                Organization\r\n              </label>\r\n            </div>\r\n            <div className=\"col s12 m4 input-field\">\r\n              <input\r\n                id=\"create_resume_exp_position\"\r\n                type=\"text\"\r\n                className=\"validate\"\r\n                value={position}\r\n                onChange={changeHandler(\"position\", \"exp\")}\r\n              />\r\n              <label htmlFor=\"create_resume_exp_position\">Position</label>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col s12 m8 offset-m1 input-field\">\r\n              {work_details.map((data, index) => {\r\n                return (\r\n                  <div key={index} className=\"row\">\r\n                    <div className=\"col s8 m8\">{data.workDetail}</div>\r\n                    <div className=\"col s4 m4\">\r\n                      <button\r\n                        onClick={removeInfo(data.work_id, \"work\")}\r\n                        className=\"btn-flat create-resuem-table-remove-btn\"\r\n                      >\r\n                        <i className=\"far fa-trash-alt\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n\r\n              <div className=\"row\"></div>\r\n            </div>\r\n            <div className=\"col s12 m4 offset-m1 input-field\">\r\n              <input\r\n                id=\"create_resume_exp_work_details\"\r\n                type=\"text\"\r\n                className=\"validate\"\r\n                value={workDetail}\r\n                onChange={changeHandler(\"workDetail\", \"work\")}\r\n              />\r\n              <label htmlFor=\"create_resume_exp_work_details\">\r\n                Work Details\r\n              </label>\r\n            </div>\r\n            <div className=\"col s12 m4\">\r\n              <button\r\n                className=\"btn waves-effect waves-light\"\r\n                onClick={addInfo(\"work\")}\r\n              >\r\n                ADD\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col s6 m2 offset-m1 input-field\">\r\n              <select\r\n                value={joining_month}\r\n                onChange={changeHandler(\"joining_month\", \"exp\")}\r\n              >\r\n                <option value=\"null\" disabled>\r\n                  Select Month\r\n                </option>\r\n                {addMonth().map((month) => {\r\n                  return (\r\n                    <option key={month.value} value={month.value}>\r\n                      {month.label}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n\r\n              <label>Joining Month</label>\r\n            </div>\r\n            <div className=\"col s6 m2 input-field\">\r\n              <select\r\n                value={joining_year}\r\n                onChange={changeHandler(\"joining_year\", \"exp\")}\r\n              >\r\n                <option value=\"null\" disabled>\r\n                  Select Year\r\n                </option>\r\n                {addYears().map((year) => {\r\n                  return (\r\n                    <option key={year.value} value={year.value}>\r\n                      {year.label}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n\r\n              <label>Joining Year</label>\r\n            </div>\r\n            <div className=\"col s6 m2  input-field\">\r\n              <select\r\n                value={leaving_month}\r\n                onChange={changeHandler(\"leaving_month\", \"exp\")}\r\n              >\r\n                <option value=\"null\" disabled>\r\n                  Select Month\r\n                </option>\r\n                {addMonth().map((month) => {\r\n                  return (\r\n                    <option key={month.value} value={month.value}>\r\n                      {month.label}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n\r\n              <label>Leaving month</label>\r\n            </div>\r\n            <div className=\"col s6 m2 input-field\">\r\n              <select\r\n                value={leaving_year}\r\n                onChange={changeHandler(\"leaving_year\", \"exp\")}\r\n              >\r\n                <option value=\"null\" disabled>\r\n                  Select Year\r\n                </option>\r\n                {addYears().map((year) => {\r\n                  return (\r\n                    <option key={year.value} value={year.value}>\r\n                      {year.label}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n\r\n              <label>Leaving Year</label>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col s12 m4 offset-m1 input-field\">\r\n            <button\r\n              className=\"btn waves-effect waves-light\"\r\n              onClick={addInfo(\"exp\")}\r\n            >\r\n              ADD\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const diploma_certificateInfoForm = (\r\n    <div className=\"row basic-template-row\">\r\n      <div className=\"s12 col create-resume-section-heading\">\r\n        Diplomas/Certificates\r\n      </div>\r\n      <div className=\"row education-table-row\">\r\n        <div className=\"col s12 m10 offset-m1 education-table-wrapper\">\r\n          <table className=\"highlight responsive-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Course Title</th>\r\n                <th>Institute</th>\r\n\r\n                {templateId === \"1\" && <th>Course Duration (in Month)</th>}\r\n                <th>Date of completion (Month,Year)</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {certificates_diplomas.map((data) => {\r\n                return (\r\n                  <tr key={data.diploma_id}>\r\n                    <td>{data.diploma_title}</td>\r\n                    <td>{data.diploma_institute}</td>\r\n\r\n                    {templateId === \"1\" && <td>{data.course_duration}</td>}\r\n                    <td>{data.date_of_completion}</td>\r\n                    <td>\r\n                      <button\r\n                        onClick={removeInfo(data.diploma_id, \"dips\")}\r\n                        className=\"btn-flat  create-resuem-table-remove-btn\"\r\n                      >\r\n                        <i className=\"far fa-trash-alt\"></i>\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div className=\"col s12 m4 offset-m1 input-field\">\r\n        <input\r\n          id=\"create_resume_diploma_title\"\r\n          type=\"text\"\r\n          className=\"validate\"\r\n          value={diploma_title}\r\n          onChange={changeHandler(\"diploma_title\", \"dips\")}\r\n        />\r\n        <label htmlFor=\"create_resume_diploma_title\">Course Name</label>\r\n      </div>\r\n      <div className=\"col s12 m4 input-field\">\r\n        <input\r\n          id=\"create_resume_diploma_institute\"\r\n          type=\"text\"\r\n          className=\"validate\"\r\n          value={diploma_institute}\r\n          onChange={changeHandler(\"diploma_institute\", \"dips\")}\r\n        />\r\n        <label htmlFor=\"create_resume_diploma_institute\">Institute</label>\r\n      </div>\r\n\r\n      {templateId === \"1\" && (\r\n        <div className=\"col s12 m4  offset-m1 input-field\">\r\n          <input\r\n            id=\"create_resume_course_duration\"\r\n            type=\"text\"\r\n            className=\"validate\"\r\n            value={course_duration}\r\n            onChange={changeHandler(\"course_duration\", \"dips\")}\r\n          />\r\n          <label htmlFor=\"create_resume_course_duration\">\r\n            Course Duration (in months)\r\n          </label>\r\n        </div>\r\n      )}\r\n      <div\r\n        className={\r\n          templateId !== \"1\"\r\n            ? \"col s12 m4 offset-m1  input-field\"\r\n            : \"col s12 m4  input-field\"\r\n        }\r\n      >\r\n        <input\r\n          id=\"create_resume_date_of_completion\"\r\n          type=\"text\"\r\n          className=\"validate\"\r\n          value={date_of_completion}\r\n          onChange={changeHandler(\"date_of_completion\", \"dips\")}\r\n        />\r\n        <label htmlFor=\"create_resume_date_of_completion\">\r\n          Date of completion (Month,Year/ ex. January, 2019)\r\n        </label>\r\n      </div>\r\n      <div className=\"col s12 m4 input-field center\">\r\n        <button\r\n          className=\"btn waves-effect waves-light\"\r\n          onClick={addInfo(\"dips\")}\r\n        >\r\n          ADD\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n  const skillInfoForm = (\r\n    <div className=\"row basic-template-row\">\r\n      <div className=\"s12 col create-resume-section-heading\">Skills</div>\r\n      <div className=\"row education-table-row\">\r\n        <div className=\"col s12 m10 offset-m1 education-table-wrapper\">\r\n          <table className=\"highlight responsive-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Skill </th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {skills.map((data) => {\r\n                return (\r\n                  <tr key={data.skill_id}>\r\n                    <td>{data.skill}</td>\r\n                    <td>\r\n                      <button\r\n                        onClick={removeInfo(data.skill_id, \"skills\")}\r\n                        className=\"btn-flat  create-resuem-table-remove-btn\"\r\n                      >\r\n                        <i className=\"far fa-trash-alt\"></i>\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div className=\"col s12 m4 offset-m1 input-field\">\r\n        <input\r\n          id=\"create_resume_skills\"\r\n          type=\"text\"\r\n          className=\"validate\"\r\n          value={skill}\r\n          onChange={changeHandler(\"skill\", \"skills\")}\r\n        />\r\n        <label htmlFor=\"create_resume_skills\">Skill</label>\r\n      </div>\r\n      <div className=\"col s12 m4 input-field center\">\r\n        <button\r\n          className=\"btn waves-effect waves-light\"\r\n          onClick={addInfo(\"skills\")}\r\n        >\r\n          ADD\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const skillInfoFormType2 = (\r\n    <div className=\"row basic-template-row\">\r\n      <div className=\"s12 col create-resume-section-heading\">Skills</div>\r\n      <div className=\"row education-table-row\">\r\n        <div className=\"col s12 m10 offset-m1 education-table-wrapper\">\r\n          <table className=\"highlight responsive-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Skill </th>\r\n                <th>Skill Level</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {skills.map((data) => {\r\n                return (\r\n                  <tr key={data.skill_id}>\r\n                    <td>{data.skill}</td>\r\n                    <td>\r\n                      <div className=\"progress skill-progress-bar\">\r\n                        <div\r\n                          className=\"determinate\"\r\n                          style={{ width: `${data.skill_level}%` }}\r\n                        ></div>\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <button\r\n                        onClick={removeInfo(data.skill_id, \"skills\")}\r\n                        className=\"btn-flat  create-resuem-table-remove-btn\"\r\n                      >\r\n                        <i className=\"far fa-trash-alt\"></i>\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div className=\"col s12 m4 offset-m1 input-field\">\r\n        <input\r\n          id=\"create_resume_skills\"\r\n          type=\"text\"\r\n          className=\"validate\"\r\n          value={skill}\r\n          onChange={changeHandler(\"skill\", \"skills\")}\r\n        />\r\n        <label htmlFor=\"create_resume_skills\">Skill</label>\r\n      </div>\r\n      <div className=\"col s12 m4\">\r\n        <p className=\"skill-label\">Skill Level</p>\r\n        <p className=\"range-field skill-range\">\r\n          <input\r\n            type=\"range\"\r\n            value={skill_level}\r\n            min=\"0\"\r\n            max=\"100\"\r\n            onInput={changeHandler(\"skill_level\", \"skills\")}\r\n            onChange={changeHandler(\"skill_level\", \"skills\")}\r\n          />\r\n        </p>\r\n      </div>\r\n      <div className=\"col s12 m4 center\">\r\n        <button\r\n          className=\"btn waves-effect waves-light\"\r\n          onClick={addInfo(\"skills\")}\r\n        >\r\n          ADD\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const submitButton = (\r\n    <div className=\"row\">\r\n      <div className=\"col s12 m4 offset-m1  create-resume-save-button\">\r\n        <button\r\n          onClick={submitResumeInfo}\r\n          className=\"waves-effect waves-light btn\"\r\n        >\r\n          Save Details and Download\r\n        </button>\r\n      </div>\r\n      <div className=\"col s12 m4   create-resume-save-button\">\r\n        <button\r\n          onClick={getPreview}\r\n          data-target=\"PDFpreview\"\r\n          className=\"btn modal-trigger\"\r\n          disabled={loading ? true : false}\r\n        >\r\n          Preview\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n  const pageHeading = (\r\n    <div className=\"row  create-resume-heading-container\">\r\n      <div className=\"col s12 create-resume-heading\">Create Resume</div>\r\n    </div>\r\n  );\r\n  const templateForm1 = (\r\n    <Fragment>\r\n      {pageHeading}\r\n      <div className=\"create-resume-form-container\">\r\n        {basicInfoForm}\r\n        {contactInfoForm}\r\n        {addressInfoForm}\r\n        {experianceInfoForm}\r\n        {academicQualificationForm}\r\n        {diploma_certificateInfoForm}\r\n        {skillInfoForm}\r\n        {submitButton}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n  const templateForm2 = (\r\n    <Fragment>\r\n      {pageHeading}\r\n      <div className=\"create-resume-form-container\">\r\n        {basicInfoForm}\r\n        {contactInfoForm}\r\n        {addressInfoForm}\r\n        {experianceInfoForm}\r\n        {academicQualificationForm}\r\n        {diploma_certificateInfoForm}\r\n        {skillInfoForm}\r\n        {submitButton}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n  const templateForm3 = (\r\n    <Fragment>\r\n      {pageHeading}\r\n      <div className=\"create-resume-form-container\">\r\n        {basicInfoForm}\r\n        {contactInfoForm}\r\n        {addressInfoForm}\r\n        {experianceInfoFormType2}\r\n        {academicQualificationForm}\r\n        {diploma_certificateInfoForm}\r\n        {skillInfoFormType2}\r\n        {submitButton}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n\r\n  const templateForm4 = (\r\n    <Fragment>\r\n      {pageHeading}\r\n      <div className=\"create-resume-form-container\">\r\n        {basicInfoForm}\r\n        {contactInfoForm}\r\n        {addressInfoForm}\r\n        {experianceInfoFormType2}\r\n        {academicQualificationForm}\r\n        {diploma_certificateInfoForm}\r\n        {skillInfoFormType2}\r\n        {submitButton}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n  const templateForm5 = (\r\n    <Fragment>\r\n      {pageHeading}\r\n      <div className=\"create-resume-form-container\">\r\n        {basicInfoForm}\r\n        {contactInfoForm}\r\n        {addressInfoForm}\r\n        {experianceInfoFormType2}\r\n        {academicQualificationForm}\r\n        {diploma_certificateInfoForm}\r\n        {skillInfoForm}\r\n        {submitButton}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n  const templateForm6 = (\r\n    <Fragment>\r\n      {pageHeading}\r\n      <div className=\"create-resume-form-container\">\r\n        {basicInfoForm}\r\n        {contactInfoForm}\r\n        {addressInfoForm}\r\n        {experianceInfoFormType2}\r\n        {academicQualificationForm}\r\n        {diploma_certificateInfoForm}\r\n        {skillInfoForm}\r\n        {submitButton}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n\r\n  const selectForm = () => {\r\n    switch (templateId) {\r\n      case \"1\":\r\n        return templateForm1;\r\n\r\n      case \"2\":\r\n        return templateForm2;\r\n\r\n      case \"3\":\r\n        return templateForm3;\r\n\r\n      case \"4\":\r\n        return templateForm4;\r\n\r\n      case \"5\":\r\n        return templateForm5;\r\n\r\n      case \"6\":\r\n        return templateForm6;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  return (\r\n    <BaseWrapper>\r\n      {selectForm()}\r\n      <PDFpreviewModal\r\n        previewHandler={getPreview}\r\n        isTrue={preview}\r\n        templateId={templateId}\r\n        resumeInfo={resume}\r\n      />\r\n      {performRedirect()}\r\n    </BaseWrapper>\r\n  );\r\n};\r\n\r\nexport default CreateResume;\r\n","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\admin\\DashboardAdmin.js",["273","274","275","276"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { isAutheticated } from \"../auth/helper\";\r\nimport BaseWrapper from \"../core/BaseWrapper\";\r\nimport NumberCard from \"../core/NumberCard\";\r\nimport AllResumeChart from \"./AllResumeChart\";\r\nimport AllResumesChartTemplates from \"./AllResumesChartTemplates\";\r\nimport \"./css/adminDashboard.css\";\r\nimport { getAllResumes, getAllUsers } from \"./helper/apicalls\";\r\nimport HourResumeChart from \"./HourResumeChart\";\r\nimport RegistrationActivityChart from \"./RegistrationActivityChart\";\r\nimport UsersChart from \"./UsersChart\";\r\nimport VerificationHourlyChart from \"./VerificationHourlyChart\";\r\nimport M from \"materialize-css\";\r\n\r\nconst DashboardAdmin = () => {\r\n  const { token, user } = isAutheticated();\r\n  const [resumes, setResumes] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [indicators, setIndicators] = useState({\r\n    loading: \"\",\r\n    success: \"\",\r\n    error: \"\",\r\n  });\r\n  const { loading, success, error } = indicators;\r\n\r\n  const [rindicators, setRindicators] = useState({\r\n    rloading: \"\",\r\n    rsuccess: \"\",\r\n    rerror: \"\",\r\n  });\r\n  const { rloading, rsuccess, rerror } = rindicators;\r\n\r\n  const [userInfo, setUserInfo] = useState({\r\n    last5HourTotalUsers: [],\r\n    last5HourVerified: [],\r\n    last5HourUnverified: [],\r\n    totalUser: 0,\r\n    totalVerified: 0,\r\n    totalUnverified: 0,\r\n    totalUserToday: 0,\r\n    totalUnverifiedToday: 0,\r\n    totalVerifiedToday: 0,\r\n    prvious5Monthlabels: [],\r\n    prvious5totalUser: [],\r\n    prvious5totalUnverified: [],\r\n    prvious5totalVerified: [],\r\n  });\r\n\r\n  const {\r\n    last5HourTotalUsers,\r\n    last5HourUnverified,\r\n    last5HourVerified,\r\n    totalUser,\r\n    totalUnverified,\r\n    totalVerified,\r\n    totalUserToday,\r\n    totalUnverifiedToday,\r\n    totalVerifiedToday,\r\n    prvious5Monthlabels,\r\n    prvious5totalUser,\r\n    prvious5totalUnverified,\r\n    prvious5totalVerified,\r\n  } = userInfo;\r\n\r\n  const [resumeInfo, setResumeInfo] = useState({\r\n    totalResumes: 0,\r\n    totalResumesToday: 0,\r\n    previous5HoursResumesCount: [],\r\n    resumesTemplateCount: [],\r\n    previous5MonthResumesLabels: [],\r\n    previous5MonthResumesCount: [],\r\n  });\r\n  const {\r\n    totalResumes,\r\n    totalResumesToday,\r\n    previous5HoursResumesCount,\r\n    resumesTemplateCount,\r\n    previous5MonthResumesLabels,\r\n    previous5MonthResumesCount,\r\n  } = resumeInfo;\r\n\r\n  //FETCHING USERS\r\n  useEffect(() => {\r\n    setIndicators({ ...indicators, loading: true, success: \"\", error: \"\" });\r\n    getAllUsers(token, user.id).then((data) => {\r\n      if (data.error) {\r\n        setIndicators({\r\n          ...indicators,\r\n          loading: \"\",\r\n          seccess: \"\",\r\n          error: data.error,\r\n        });\r\n        console.log(\"error Featching Users\");\r\n      } else {\r\n        setIndicators({ ...indicators, loading: \"\", error: \"\", success: true });\r\n        setUsers(data);\r\n      }\r\n    });\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  //FETCHING RESUMES\r\n  useEffect(() => {\r\n    setRindicators({\r\n      ...rindicators,\r\n      rloading: true,\r\n      rsuccess: \"\",\r\n      rerror: \"\",\r\n    });\r\n    getAllResumes(token, user.id).then((data) => {\r\n      if (data.error) {\r\n        setRindicators({\r\n          ...rindicators,\r\n          rloading: \"\",\r\n          rsuccess: \"\",\r\n          rerror: data.error,\r\n        });\r\n      } else {\r\n        setRindicators({\r\n          ...rindicators,\r\n          rloading: \"\",\r\n          rsuccess: true,\r\n          rerror: \"\",\r\n        });\r\n        setResumes(data);\r\n      }\r\n    });\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  const formatDate = (date, type) => {\r\n    let dd = date.getDate();\r\n    let mm = date.getMonth() + 1;\r\n    let yyyy = date.getFullYear();\r\n    switch (type) {\r\n      case \"full\":\r\n        return dd + \"/\" + mm + \"/\" + yyyy;\r\n      case \"monthYear\":\r\n        return mm + \"/\" + yyyy;\r\n      case \"year\":\r\n        return yyyy;\r\n      case \"month\":\r\n        return mm;\r\n      case \"date\":\r\n        return dd;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const getUserInfo = (type) => {\r\n    let tempArray = [];\r\n    let val;\r\n    switch (type) {\r\n      case \"last5HourTotalUsers\":\r\n        for (let i = 0; i <= 4; i++) {\r\n          let val;\r\n          val = users.filter(\r\n            (user) =>\r\n              new Date(user.createdAt).getHours() ===\r\n                new Date(\r\n                  new Date().setHours(new Date().getHours() - (i + 1))\r\n                ).getHours() &&\r\n              formatDate(new Date(user.createdAt), \"full\") ===\r\n                formatDate(new Date(), \"full\")\r\n          ).length;\r\n          tempArray.unshift(val);\r\n        }\r\n        return tempArray;\r\n      case \"last5HourUnverified\":\r\n        for (let i = 0; i <= 4; i++) {\r\n          let val;\r\n          val = users.filter(\r\n            (user) =>\r\n              new Date(user.createdAt).getHours() ===\r\n                new Date(\r\n                  new Date().setHours(new Date().getHours() - (i + 1))\r\n                ).getHours() &&\r\n              formatDate(new Date(user.createdAt), \"full\") ===\r\n                formatDate(new Date(), \"full\") &&\r\n              user.verified === false\r\n          ).length;\r\n          tempArray.unshift(val);\r\n        }\r\n        return tempArray;\r\n      case \"last5HourVerified\":\r\n        for (let i = 0; i <= 4; i++) {\r\n          let val;\r\n          val = users.filter(\r\n            (user) =>\r\n              new Date(user.createdAt).getHours() ===\r\n                new Date(\r\n                  new Date().setHours(new Date().getHours() - (i + 1))\r\n                ).getHours() &&\r\n              formatDate(new Date(user.createdAt), \"full\") ===\r\n                formatDate(new Date(), \"full\") &&\r\n              user.verified === true\r\n          ).length;\r\n          tempArray.unshift(val);\r\n        }\r\n        return tempArray;\r\n\r\n      case \"totalUserToday\":\r\n        val = users.filter(\r\n          (user) =>\r\n            formatDate(new Date(user.createdAt), \"full\") ===\r\n            formatDate(new Date(), \"full\")\r\n        ).length;\r\n        return val;\r\n      case \"totalUnverifiedToday\":\r\n        val = users.filter(\r\n          (user) =>\r\n            formatDate(new Date(user.createdAt), \"full\") ===\r\n              formatDate(new Date(), \"full\") && user.verified === false\r\n        ).length;\r\n        return val;\r\n      case \"totalVerifiedToday\":\r\n        val = users.filter(\r\n          (user) =>\r\n            formatDate(new Date(user.createdAt), \"full\") ===\r\n              formatDate(new Date(), \"full\") && user.verified === true\r\n        ).length;\r\n        return val;\r\n\r\n      case \"totalUser\":\r\n        val = users.length;\r\n        return val;\r\n      case \"totalUnverified\":\r\n        val = users.filter((user) => user.verified === false).length;\r\n        return val;\r\n      case \"totalVerified\":\r\n        val = users.filter((user) => user.verified === true).length;\r\n        return val;\r\n\r\n      case \"prvious5Monthlabels\":\r\n        for (let i = 0; i <= 4; i++) {\r\n          let val;\r\n          val = formatDate(\r\n            new Date(new Date().setMonth(new Date().getMonth() - i)),\r\n            \"monthYear\"\r\n          );\r\n          tempArray.unshift(val);\r\n        }\r\n\r\n        return tempArray;\r\n\r\n      case \"prvious5totalUser\":\r\n        for (let i = 0; i <= 4; i++) {\r\n          let val;\r\n          val = users.filter(\r\n            (user) =>\r\n              formatDate(new Date(user.createdAt), \"monthYear\") ===\r\n              formatDate(\r\n                new Date(new Date().setMonth(new Date().getMonth() - i)),\r\n                \"monthYear\"\r\n              )\r\n          ).length;\r\n\r\n          tempArray.unshift(val);\r\n        }\r\n\r\n        return tempArray;\r\n\r\n      case \"prvious5totalUnverified\":\r\n        for (let i = 0; i <= 4; i++) {\r\n          let val;\r\n          val = users.filter(\r\n            (user) =>\r\n              formatDate(new Date(user.createdAt), \"monthYear\") ===\r\n                formatDate(\r\n                  new Date(new Date().setMonth(new Date().getMonth() - i)),\r\n                  \"monthYear\"\r\n                ) && user.verified === false\r\n          ).length;\r\n\r\n          tempArray.unshift(val);\r\n        }\r\n\r\n        return tempArray;\r\n      case \"prvious5totalVerified\":\r\n        for (let i = 0; i <= 4; i++) {\r\n          let val;\r\n          val = users.filter(\r\n            (user) =>\r\n              formatDate(new Date(user.createdAt), \"monthYear\") ===\r\n                formatDate(\r\n                  new Date(new Date().setMonth(new Date().getMonth() - i)),\r\n                  \"monthYear\"\r\n                ) && user.verified === true\r\n          ).length;\r\n\r\n          tempArray.unshift(val);\r\n        }\r\n\r\n        return tempArray;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  // SETTING USERINFO\r\n  useEffect(() => {\r\n    if (error) {\r\n      M.toast({ html: \"Error Fetching Data\", classes: \"red darken-4\" });\r\n    } else {\r\n      if (users.length !== 0) {\r\n        setUserInfo({\r\n          ...userInfo,\r\n          last5HourTotalUsers: getUserInfo(\"last5HourTotalUsers\"),\r\n          last5HourUnverified: getUserInfo(\"last5HourUnverified\"),\r\n          last5HourVerified: getUserInfo(\"last5HourVerified\"),\r\n          totalUserToday: getUserInfo(\"totalUserToday\"),\r\n          totalUnverifiedToday: getUserInfo(\"totalUnverifiedToday\"),\r\n          totalVerifiedToday: getUserInfo(\"totalVerifiedToday\"),\r\n          totalUser: getUserInfo(\"totalUser\"),\r\n          totalUnverified: getUserInfo(\"totalUnverified\"),\r\n          totalVerified: getUserInfo(\"totalVerified\"),\r\n          prvious5Monthlabels: getUserInfo(\"prvious5Monthlabels\"),\r\n          prvious5totalUser: getUserInfo(\"prvious5totalUser\"),\r\n          prvious5totalUnverified: getUserInfo(\"prvious5totalUnverified\"),\r\n          prvious5totalVerified: getUserInfo(\"prvious5totalVerified\"),\r\n        });\r\n      }\r\n    }\r\n\r\n    //eslint-disable-next-line\r\n  }, [users, error]);\r\n\r\n  const getResumeInfo = (type) => {\r\n    let tempArray = [];\r\n    let val;\r\n    switch (type) {\r\n      case \"totalResumesToday\":\r\n        val = resumes.filter(\r\n          (resume) =>\r\n            formatDate(new Date(resume.date), \"full\") ===\r\n            formatDate(new Date(), \"full\")\r\n        ).length;\r\n        return val;\r\n      case \"previous5HoursResumesCount\":\r\n        for (let i = 0; i <= 4; i++) {\r\n          let val;\r\n          val = resumes.filter(\r\n            (resume) =>\r\n              new Date(resume.date).getHours() ===\r\n                new Date(\r\n                  new Date().setHours(new Date().getHours() - (i + 1))\r\n                ).getHours() &&\r\n              formatDate(new Date(resume.date), \"full\") ===\r\n                formatDate(new Date(), \"full\")\r\n          ).length;\r\n          tempArray.unshift(val);\r\n        }\r\n        return tempArray;\r\n\r\n      case \"totalResumes\":\r\n        val = resumes.length;\r\n        return val;\r\n\r\n      case \"previous5MonthResumesLabels\":\r\n        for (let i = 0; i <= 4; i++) {\r\n          let val;\r\n          val = formatDate(\r\n            new Date(new Date().setMonth(new Date().getMonth() - i)),\r\n            \"monthYear\"\r\n          );\r\n          tempArray.unshift(val);\r\n        }\r\n\r\n        return tempArray;\r\n\r\n      case \"previous5MonthResumesCount\":\r\n        for (let i = 0; i <= 4; i++) {\r\n          let val;\r\n          val = resumes.filter(\r\n            (resume) =>\r\n              formatDate(new Date(resume.date), \"monthYear\") ===\r\n              formatDate(\r\n                new Date(new Date().setMonth(new Date().getMonth() - i)),\r\n                \"monthYear\"\r\n              )\r\n          ).length;\r\n\r\n          tempArray.unshift(val);\r\n        }\r\n\r\n        return tempArray;\r\n      case \"resumesTemplateCount\":\r\n        for (let i = 1; i <= 6; i++) {\r\n          let val;\r\n          val = resumes.filter((resume) => resume.resumeTemplate === i).length;\r\n          tempArray.push(val);\r\n        }\r\n        return tempArray;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  //SETTING RESUMEINFO\r\n  useEffect(() => {\r\n    if (rerror) {\r\n      M.toast({ html: \"Error Fetching Data\", classes: \"red darken-4\" });\r\n    } else {\r\n      if (resumes.length !== 0) {\r\n        setResumeInfo({\r\n          ...resumeInfo,\r\n          totalResumesToday: getResumeInfo(\"totalResumesToday\"),\r\n          previous5HoursResumesCount: getResumeInfo(\r\n            \"previous5HoursResumesCount\"\r\n          ),\r\n          totalResumes: getResumeInfo(\"totalResumes\"),\r\n          resumesTemplateCount: getResumeInfo(\"resumesTemplateCount\"),\r\n          previous5MonthResumesLabels: getResumeInfo(\r\n            \"previous5MonthResumesLabels\"\r\n          ),\r\n          previous5MonthResumesCount: getResumeInfo(\r\n            \"previous5MonthResumesCount\"\r\n          ),\r\n        });\r\n      }\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [resumes, rerror]);\r\n\r\n  const currentDayData = (\r\n    <Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col s12\">\r\n          <div className=\"row\">\r\n            <div className=\"col s12 m6\">\r\n              <div className=\"card\">\r\n                <div className=\"card-content chartWrapper\">\r\n                  <RegistrationActivityChart totalUsers={last5HourTotalUsers} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col s12 m6\">\r\n              <div className=\"card\">\r\n                <div className=\"card-content chartWrapper\">\r\n                  <VerificationHourlyChart\r\n                    unVerifiedUsers={last5HourUnverified}\r\n                    verifiedUsers={last5HourVerified}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col s12\">\r\n          <div className=\"row numberCardSecttion\">\r\n            <div className=\"col s12 m4 numberCardBox\">\r\n              <NumberCard\r\n                totalCount={totalUserToday}\r\n                numberColor=\"#006064\"\r\n                cardHeading=\"Total Users Today\"\r\n                borderColor=\"#006064\"\r\n                textColor=\"#006064\"\r\n                iconName=\"fas fa-users\"\r\n              />\r\n            </div>\r\n            <div className=\"col s12 m4 numberCardBox\">\r\n              <NumberCard\r\n                totalCount={totalVerifiedToday}\r\n                numberColor=\"#388e3c\"\r\n                cardHeading=\"Verified Users Today\"\r\n                borderColor=\"#388e3c\"\r\n                textColor=\"#388e3c\"\r\n                iconName=\"fas fa-user-check\"\r\n              />\r\n            </div>\r\n            <div className=\"col s12 m4 numberCardBox\">\r\n              <NumberCard\r\n                totalCount={totalUnverifiedToday}\r\n                numberColor=\"#e53935\"\r\n                cardHeading=\"Unverified Users Today\"\r\n                borderColor=\"#e53935\"\r\n                textColor=\"#e53935\"\r\n                iconName=\"fas fa-user-times\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m4 offset-m1\">\r\n          <div className=\"row numberCardSection\">\r\n            <div className=\"cardSpacer hide-on-small-only\"></div>\r\n            <div className=\"col s12 numberCardBox\">\r\n              <NumberCard\r\n                totalCount={totalResumesToday}\r\n                numberColor=\"#263238 \"\r\n                cardHeading=\"Total Resumes Today\"\r\n                borderColor=\"#263238 \"\r\n                textColor=\"#263238 \"\r\n                iconName=\"fas fa-file-pdf\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col s12 m6 offset-m1\">\r\n          <div className=\"card\">\r\n            <div className=\"card-content chartWrapper\">\r\n              <HourResumeChart resumeData={previous5HoursResumesCount} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n\r\n  const totalDataRepresentation = (\r\n    <Fragment>\r\n      <div className=\"row \">\r\n        <div className=\"col s12 m9 barChartSection\">\r\n          <div className=\"card\">\r\n            <div className=\"card-content chartWrapper\">\r\n              <UsersChart\r\n                labels={prvious5Monthlabels}\r\n                totalUsers={prvious5totalUser}\r\n                totalUnverified={prvious5totalUnverified}\r\n                totalVerified={prvious5totalVerified}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col s12 m3\">\r\n          <div className=\"row numberCardSecttion\">\r\n            <div className=\"col s12 numberCardBox\">\r\n              <NumberCard\r\n                totalCount={totalUser}\r\n                numberColor=\"#006064\"\r\n                cardHeading=\"Total Users\"\r\n                borderColor=\"#006064\"\r\n                textColor=\"#006064\"\r\n                iconName=\"fas fa-users\"\r\n              />\r\n            </div>\r\n            <div className=\"col s12 numberCardBox\">\r\n              <NumberCard\r\n                totalCount={totalVerified}\r\n                numberColor=\"#388e3c\"\r\n                cardHeading=\"Verified Users\"\r\n                borderColor=\"#388e3c\"\r\n                textColor=\"#388e3c\"\r\n                iconName=\"fas fa-user-check\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col s12 numberCardBox\">\r\n              <NumberCard\r\n                totalCount={totalUnverified}\r\n                numberColor=\"#e53935\"\r\n                cardHeading=\"Unverified Users\"\r\n                borderColor=\"#e53935\"\r\n                textColor=\"#e53935\"\r\n                iconName=\"fas fa-user-times\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m6\">\r\n          <div className=\"card\">\r\n            <div className=\"card-content chartWrapper\">\r\n              <AllResumeChart\r\n                labels={previous5MonthResumesLabels}\r\n                dataSets={previous5MonthResumesCount}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row numberCardSecttion\">\r\n            <div className=\"col s12 m6 offset-m3 numberCardBox\">\r\n              <NumberCard\r\n                totalCount={totalResumes}\r\n                numberColor=\"#006064\"\r\n                cardHeading=\"Total Resumes\"\r\n                borderColor=\"#006064\"\r\n                textColor=\"#006064\"\r\n                iconName=\"fas fa-file-pdf\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col s12 m6\">\r\n          <div className=\"card\">\r\n            <div className=\"card-content chartWrapper\">\r\n              <AllResumesChartTemplates dataSets={resumesTemplateCount} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n\r\n  return (\r\n    <BaseWrapper>\r\n      <div className=\"row adminDash-wrapper\">\r\n        <div className=\"col s12 adminDash-wrapper-title\">Dashboard</div>\r\n        <div className=\"col s12\">{currentDayData}</div>\r\n        <div className=\"col s12\">{totalDataRepresentation}</div>\r\n      </div>\r\n    </BaseWrapper>\r\n  );\r\n};\r\n\r\nexport default DashboardAdmin;\r\n","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\user\\helper\\userAPICalls.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\core\\PDFpreviewModal.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\pdfGenration\\templates\\Template1.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\pdfGenration\\PDFpreview.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\user\\DownloadPDF.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\pdfGenration\\PDFDownloadButton.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\user\\UpdateResume.js",["277","278","279","280","281","282","283"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\nimport BaseWrapper from \"../core/BaseWrapper\";\r\nimport M from \"materialize-css\";\r\nimport \"./css/createResume.css\";\r\nimport { isAutheticated } from \"../auth/helper\";\r\nimport PDFpreviewModal from \"../core/PDFpreviewModal\";\r\nimport { getResumeUsingId, updateResume } from \"./helper/userAPICalls\";\r\n\r\nfunction UpdateResume() {\r\n  const { resumeId } = useParams();\r\n  const { user, token } = isAutheticated();\r\n\r\n  //MAIN RESUME DATA SET STATE\r\n  const [resume, setResume] = useState({});\r\n\r\n  //DESTRUCTURING RESUME DATA\r\n  const {\r\n    firstname,\r\n    lastname,\r\n    contact_details,\r\n    address,\r\n    profession,\r\n    discription,\r\n    academic_qualification,\r\n    experience,\r\n    fresher,\r\n    certificates_diplomas,\r\n    resumeTemplate,\r\n    skills,\r\n    date,\r\n  } = resume;\r\n\r\n  //ON SAVE RESPONSE MANAGEMENT STATE\r\n  const [indicators, setIndicators] = useState({\r\n    loading: \"\",\r\n    error: \"\",\r\n    success: \"\",\r\n    redirect: \"\",\r\n    preview: false,\r\n  });\r\n  //DESTRUCTURING ON SAVE RESPONSE MANAGEMENT STATE\r\n  const { loading, error, success, redirect, preview } = indicators;\r\n\r\n  // SUB REESUME DATA EDUCATION SECTION STATE\r\n  const [education, setEducation] = useState({\r\n    qualification_title: \"\",\r\n    institute: \"\",\r\n    board: \"\",\r\n    passing_year: \"\",\r\n\r\n    eid: \"\",\r\n  });\r\n\r\n  //DESTRUCTURING EDUCATION DATA\r\n  const {\r\n    qualification_title,\r\n    institute,\r\n    board,\r\n    passing_year,\r\n    eid,\r\n  } = education;\r\n\r\n  // SUB RESUME DATA EXPERIENCE SECTION STATE\r\n\r\n  const [exp, setExp] = useState({\r\n    organisation: \"\",\r\n    position: \"\",\r\n    work_details: [],\r\n    joining_month: \"null\",\r\n    joining_year: \"null\",\r\n    leaving_month: \"null\",\r\n    leaving_year: \"null\",\r\n    exp_id: \"\",\r\n  });\r\n\r\n  //DESTRUCTURING EXPERIENCE DATA\r\n  const {\r\n    organisation,\r\n    position,\r\n    work_details,\r\n    joining_month,\r\n    joining_year,\r\n    leaving_month,\r\n    leaving_year,\r\n    exp_id,\r\n  } = exp;\r\n\r\n  const [workList, setWorkList] = useState({\r\n    workDetail: \"\",\r\n    work_id: \"\",\r\n  });\r\n\r\n  const { workDetail, work_id } = workList;\r\n\r\n  //SKILL DATA STATE\r\n  const [skills_sub, setSkills_sub] = useState({\r\n    skill: \"\",\r\n    skill_level: 0,\r\n    skill_id: \"\",\r\n  });\r\n\r\n  //DESTRUCTURING SKILL\r\n  const { skill, skill_level, skill_id } = skills_sub;\r\n\r\n  //Diploma DATA STATE\r\n  const [diplomas, setDiplomas] = useState({\r\n    diploma_title: \"\",\r\n    diploma_institute: \"\",\r\n    course_duration: \"\",\r\n    date_of_completion: \"\",\r\n    diploma_id: \"\",\r\n  });\r\n\r\n  //DESTRUCTURING SKILL\r\n  const {\r\n    diploma_title,\r\n    diploma_institute,\r\n    course_duration,\r\n    date_of_completion,\r\n    diploma_id,\r\n  } = diplomas;\r\n\r\n  // MATERILIZE CSS OPTIONS\r\n  useEffect(() => {\r\n    let elem = document.querySelectorAll(\"select\");\r\n    let insct = M.FormSelect.init(elem, {});\r\n    return () => {\r\n      insct.map((ins) => {\r\n        return ins.destroy();\r\n      });\r\n    };\r\n  }, [fresher]);\r\n\r\n  //ERROR ON SAVING DETAILS\r\n  useEffect(() => {\r\n    if (error) {\r\n      M.toast({\r\n        html: error,\r\n        classes: \" red darken-4\",\r\n      });\r\n      setIndicators({ ...indicators, error: \"\" });\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [error]);\r\n\r\n  // MATERILIZE CSS RANGE\r\n  useEffect(() => {\r\n    let elements = document.querySelectorAll(\".myRange\");\r\n    M.Range.init(elements);\r\n  }, []);\r\n\r\n  //Get Resume\r\n  useEffect(() => {\r\n    setIndicators({ ...indicators, loading: true });\r\n    getResumeUsingId(token, user.id, resumeId).then((data) => {\r\n      if (data.error) {\r\n        M.toast({ html: data.error });\r\n      } else {\r\n        setResume(data);\r\n      }\r\n    });\r\n\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  // MATERILIZE CSS UPDATE TEXT FILED\r\n  useEffect(() => {\r\n    M.updateTextFields();\r\n  }, [resume]);\r\n\r\n  //STATE CHANGE  HANDLER\r\n  const changeHandler = (field, section) => (e) => {\r\n    switch (section) {\r\n      case \"edu\":\r\n        setEducation({\r\n          ...education,\r\n          [field]: e.target.value,\r\n          eid: Math.floor(100000000 + Math.random() * 900000000),\r\n        });\r\n        break;\r\n\r\n      case \"exp\":\r\n        setExp({\r\n          ...exp,\r\n          [field]: e.target.value,\r\n          exp_id: Math.floor(100000000 + Math.random() * 900000000),\r\n        });\r\n        break;\r\n      case \"work\":\r\n        setWorkList({\r\n          ...workList,\r\n          [field]: e.target.value,\r\n          work_id: Math.floor(100000000 + Math.random() * 900000000),\r\n        });\r\n        break;\r\n\r\n      case \"fresher\":\r\n        setResume({ ...resume, [field]: !fresher });\r\n        break;\r\n\r\n      case \"dips\":\r\n        setDiplomas({\r\n          ...diplomas,\r\n          [field]: e.target.value,\r\n          diploma_id: Math.floor(100000000 + Math.random() * 900000000),\r\n        });\r\n\r\n        break;\r\n\r\n      case \"skills\":\r\n        setSkills_sub({\r\n          ...skills_sub,\r\n          [field]: e.target.value,\r\n          skill_id: Math.floor(100000000 + Math.random() * 900000000),\r\n        });\r\n        break;\r\n\r\n      case \"basic\":\r\n        setResume({ ...resume, [field]: e.target.value });\r\n        break;\r\n\r\n      case \"contact\":\r\n        setResume({\r\n          ...resume,\r\n          contact_details: { ...contact_details, [field]: e.target.value },\r\n        });\r\n        break;\r\n      case \"address\":\r\n        setResume({\r\n          ...resume,\r\n          address: { ...address, [field]: e.target.value },\r\n        });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  // ADD INFO\r\n  const addInfo = (section) => (e) => {\r\n    let tempArry;\r\n    let eduConditions =\r\n      resumeTemplate === 1\r\n        ? qualification_title.trim() === \"\" ||\r\n          institute.trim() === \"\" ||\r\n          board.trim() === \"\" ||\r\n          passing_year.trim() === \"\"\r\n        : qualification_title.trim() === \"\" ||\r\n          institute.trim() === \"\" ||\r\n          passing_year.trim() === \"\";\r\n    let dipsCondition =\r\n      resumeTemplate === 1\r\n        ? diploma_title.trim() === \"\" ||\r\n          diploma_institute.trim() === \"\" ||\r\n          course_duration.trim() === \"\" ||\r\n          date_of_completion.trim() === \"\"\r\n        : diploma_title.trim() === \"\" ||\r\n          diploma_institute.trim() === \"\" ||\r\n          date_of_completion.trim() === \"\";\r\n    switch (section) {\r\n      case \"edu\":\r\n        if (eduConditions) {\r\n          M.toast({\r\n            html: \"Please fill all the fields in the section\",\r\n            classes: \"#e65100 orange darken-4\",\r\n          });\r\n        } else {\r\n          tempArry = academic_qualification;\r\n          tempArry.unshift(education);\r\n          setResume({ ...resume, academic_qualification: tempArry });\r\n          setEducation({\r\n            ...education,\r\n            qualification_title: \"\",\r\n            institute: \"\",\r\n            board: \"\",\r\n            passing_year: \"\",\r\n            marks: \"\",\r\n            eid: \"\",\r\n          });\r\n          tempArry = [];\r\n        }\r\n\r\n        break;\r\n      case \"work\":\r\n        if (workDetail.trim() === \"\") {\r\n          M.toast({\r\n            html: \"Please fill the fields\",\r\n            classes: \"#e65100 orange darken-4\",\r\n          });\r\n        } else {\r\n          tempArry = work_details;\r\n          tempArry.unshift(workList);\r\n          setExp({ ...exp, work_details: tempArry });\r\n          setWorkList({\r\n            ...workList,\r\n            workDetail: \"\",\r\n          });\r\n          tempArry = [];\r\n        }\r\n\r\n        break;\r\n\r\n      case \"exp\":\r\n        if (\r\n          organisation.trim() === \"\" ||\r\n          position.trim() === \"\" ||\r\n          joining_month === \"null\" ||\r\n          joining_year === \"null\" ||\r\n          leaving_month === \"null\" ||\r\n          leaving_year === \"null\"\r\n        ) {\r\n          M.toast({\r\n            html: \"Please fill all the fields in the section\",\r\n            classes: \"#e65100 orange darken-4\",\r\n          });\r\n        } else {\r\n          tempArry = experience;\r\n          tempArry.unshift(exp);\r\n          setResume({ ...resume, experience: tempArry });\r\n          setExp({\r\n            ...exp,\r\n            organisation: \"\",\r\n            position: \"\",\r\n            work_details: [],\r\n            joining_month: \"null\",\r\n            joining_year: \"null\",\r\n            leaving_month: \"null\",\r\n            leaving_year: false,\r\n            exp_id: \"\",\r\n          });\r\n\r\n          tempArry = [];\r\n        }\r\n\r\n        break;\r\n      case \"dips\":\r\n        if (dipsCondition) {\r\n          M.toast({\r\n            html: \"Please fill all the fields in the section\",\r\n            classes: \"#e65100 orange darken-4\",\r\n          });\r\n        } else {\r\n          tempArry = certificates_diplomas;\r\n          tempArry.unshift(diplomas);\r\n          setResume({ ...resume, certificates_diplomas: tempArry });\r\n          setDiplomas({\r\n            ...diplomas,\r\n            diploma_title: \"\",\r\n            diploma_institute: \"\",\r\n            course_type: \"\",\r\n            course_duration: \"\",\r\n            date_of_completion: \"\",\r\n            diploma_id: \"\",\r\n          });\r\n          tempArry = [];\r\n        }\r\n\r\n        break;\r\n      case \"skills\":\r\n        if (skill.trim() === \"\") {\r\n          M.toast({\r\n            html: \"Please enter the skill\",\r\n            classes: \"#e65100 orange darken-4\",\r\n          });\r\n        } else {\r\n          tempArry = skills;\r\n          tempArry.unshift(skills_sub);\r\n          setResume({ ...resume, skills: tempArry });\r\n          setSkills_sub({\r\n            ...skills_sub,\r\n            skill: \"\",\r\n            skill_level: \"0\",\r\n            skill_id: \"\",\r\n          });\r\n          tempArry = [];\r\n        }\r\n\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  //REMOVE INFO\r\n  const removeInfo = (id, section) => (e) => {\r\n    e.preventDefault();\r\n    let newArry;\r\n    switch (section) {\r\n      case \"edu\":\r\n        newArry = academic_qualification.filter((edu) => edu.eid !== id);\r\n        setResume({ ...resume, academic_qualification: newArry });\r\n        break;\r\n      case \"exp\":\r\n        newArry = experience.filter((expe) => expe.exp_id !== id);\r\n        setResume({ ...resume, experience: newArry });\r\n        break;\r\n      case \"work\":\r\n        newArry = work_details.filter((w) => w.work_id !== id);\r\n        setExp({ ...exp, work_details: newArry });\r\n        break;\r\n      case \"dips\":\r\n        newArry = certificates_diplomas.filter(\r\n          (dips) => dips.diploma_id !== id\r\n        );\r\n        setResume({ ...resume, certificates_diplomas: newArry });\r\n        break;\r\n      case \"skills\":\r\n        newArry = skills.filter((skill_sub) => skill_sub.skill_id !== id);\r\n        setResume({ ...resume, skills: newArry });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const submitResumeInfo = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      firstname.trim() === \"\" ||\r\n      contact_details.email.trim() === \"\" ||\r\n      contact_details.mobile.trim() === \"\" ||\r\n      profession.trim() === \"\" ||\r\n      discription.trim() === \"\" ||\r\n      address.line_1.trim() === \"\" ||\r\n      address.city.trim() === \"\" ||\r\n      address.state.trim() === \"\"\r\n    ) {\r\n      M.toast({\r\n        html: \"Please fill all the fields in the section\",\r\n        classes: \" orange darken-4\",\r\n      });\r\n    } else {\r\n      setIndicators({ ...indicators, error: \"\", success: \"\", loading: true });\r\n      updateResume(resumeId, user.id, token, resume).then((data) => {\r\n        if (data.error) {\r\n          setIndicators({ ...indicators, error: data.error, loading: false });\r\n        } else {\r\n          setIndicators({\r\n            ...indicators,\r\n            loading: false,\r\n            success: true,\r\n            redirect: data.resumeId,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const getPreview = (e) => {\r\n    // e.preventDefault();\r\n    setIndicators({ ...indicators, preview: !preview });\r\n  };\r\n\r\n  //MONTH ARRAYS FOR SELECT TAG\r\n  const addMonth = () => {\r\n    let months = [];\r\n    let monthName = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    function month(value, label) {\r\n      this.value = value;\r\n      this.label = label;\r\n    }\r\n    for (let i = 1; i <= 12; i++) {\r\n      var m = new month(monthName[i - 1], monthName[i - 1]);\r\n      months.push(m);\r\n    }\r\n    return months;\r\n  };\r\n\r\n  //YEAR ARRAYS FOR SELECT TAG\r\n  const addYears = () => {\r\n    let years = [];\r\n    function year(value, label) {\r\n      this.value = value;\r\n      this.label = label;\r\n    }\r\n    for (let i = 1990; i <= new Date().getFullYear(); i++) {\r\n      let y = new year(i, i);\r\n      years.push(y);\r\n    }\r\n    return years;\r\n  };\r\n\r\n  const performRedirect = () => {\r\n    if (success) {\r\n      return <Redirect to={`/user/download/${redirect}`} />;\r\n    }\r\n  };\r\n  const basicInfoForm = (\r\n    <div className=\"row basic-template-row\">\r\n      <div className=\" col s12 create-resume-section-heading\">Basic Info</div>\r\n      <div className=\"col s12 m4 offset-m1 input-field\">\r\n        <input\r\n          id=\"create_resume_first_name\"\r\n          type=\"text\"\r\n          className=\"validate\"\r\n          value={firstname}\r\n          onChange={changeHandler(\"firstname\", \"basic\")}\r\n        />\r\n        <label htmlFor=\"create_resume_first_name\">First Name</label>\r\n      </div>\r\n      <div className=\"col s12 m4 input-field\">\r\n        <input\r\n          id=\"create_resume_last_name\"\r\n          type=\"text\"\r\n          className=\"validate\"\r\n          value={lastname}\r\n          onChange={changeHandler(\"lastname\", \"basic\")}\r\n        />\r\n        <label htmlFor=\"create_resume_last_name\">Last Name</label>\r\n      </div>\r\n      <div className=\"col s12 m4 offset-m1 input-field\">\r\n        <input\r\n          id=\"create_resume_profession\"\r\n          type=\"text\"\r\n          className=\"validate\"\r\n          value={profession}\r\n          onChange={changeHandler(\"profession\", \"basic\")}\r\n        />\r\n        <label htmlFor=\"create_resume_profession\">Professional Title</label>\r\n      </div>\r\n      <div className=\"col s12 m4 input-field\">\r\n        <textarea\r\n          className=\"materialize-textarea\"\r\n          value={discription}\r\n          onChange={changeHandler(\"discription\", \"basic\")}\r\n        ></textarea>\r\n        <label htmlFor=\"create_resume_short_pitch\">\r\n          Short pitch about yourself\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const contactInfoForm = (\r\n    <div className=\"row basic-template-row\">\r\n      <div className=\"s12 col create-resume-section-heading\">Contact Info</div>\r\n      <div className=\"col s12 m4 offset-m1 input-field\">\r\n        <input\r\n          id=\"create_resume_email\"\r\n          type=\"email\"\r\n          className=\"validate\"\r\n          value={contact_details ? contact_details.email : \"\"}\r\n          onChange={changeHandler(\"email\", \"contact\")}\r\n        />\r\n        <label htmlFor=\"create_resume_email\">Email</label>\r\n      </div>\r\n      <div className=\"col s12 m4 input-field\">\r\n        <input\r\n          id=\"create_resume_mobile\"\r\n          type=\"text\"\r\n          className=\"validate\"\r\n          value={contact_details ? contact_details.mobile : \"\"}\r\n          onChange={changeHandler(\"mobile\", \"contact\")}\r\n        />\r\n        <label htmlFor=\"create_resume_mobile\">Mobile Number</label>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const addressInfoForm = (\r\n    <div className=\"row basic-template-row\">\r\n      <div className=\"s12 col create-resume-section-heading\">Address Info</div>\r\n      <div className=\"col s12 m4 offset-m1 input-field\">\r\n        <input\r\n          id=\"create_resume_address_line_1\"\r\n          type=\"text\"\r\n          className=\"validate\"\r\n          value={address ? address.line_1 : \"\"}\r\n          onChange={changeHandler(\"line_1\", \"address\")}\r\n        />\r\n        <label htmlFor=\"create_resume_address_line_1\">Line 1</label>\r\n      </div>\r\n      <div className=\"col s12 m4 input-field\">\r\n        <input\r\n          id=\"create_resume_address_line_2\"\r\n          type=\"text\"\r\n          className=\"validate\"\r\n          value={address ? address.line_2 : \"\"}\r\n          onChange={changeHandler(\"line_2\", \"address\")}\r\n        />\r\n        <label htmlFor=\"create_resume_address_line_2\">Line 2</label>\r\n      </div>\r\n      <div className=\"col s12 m4 offset-m1 input-field\">\r\n        <input\r\n          id=\"create_resume_address_line_3\"\r\n          type=\"text\"\r\n          className=\"validate\"\r\n          value={address ? address.line_3 : \"\"}\r\n          onChange={changeHandler(\"line_3\", \"address\")}\r\n        />\r\n        <label htmlFor=\"create_resume_address_line_3\">Line 3</label>\r\n      </div>\r\n      <div className=\"col s12 m4 input-field\">\r\n        <input\r\n          id=\"create_resume_address_city\"\r\n          type=\"text\"\r\n          className=\"validate\"\r\n          value={address ? address.city : \"\"}\r\n          onChange={changeHandler(\"city\", \"address\")}\r\n        />\r\n        <label htmlFor=\"create_resume_address_city\">City</label>\r\n      </div>\r\n      <div className=\"col s12 m4 offset-m1 input-field\">\r\n        <input\r\n          id=\"create_resume_address_state\"\r\n          type=\"text\"\r\n          className=\"validate\"\r\n          value={address ? address.state : \"\"}\r\n          onChange={changeHandler(\"state\", \"address\")}\r\n        />\r\n        <label htmlFor=\"create_resume_address_state\">State</label>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const academicQualificationForm = (\r\n    <div className=\"row basic-template-row\">\r\n      <div className=\"s12 col create-resume-section-heading\">\r\n        Academic Qualification\r\n      </div>\r\n      <div className=\"row education-table-row\">\r\n        <div className=\"col s12 m10 offset-m1 education-table-wrapper\">\r\n          <table className=\"highlight responsive-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Qualification</th>\r\n                <th>School/University</th>\r\n                {resumeTemplate === 1 && <th>Board</th>}\r\n                <th>Passing Year</th>\r\n\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {academic_qualification ? (\r\n                academic_qualification.map((data, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{data.qualification_title}</td>\r\n                      <td>{data.institute}</td>\r\n                      {resumeTemplate === 1 && <td>{data.board}</td>}\r\n                      <td>{data.passing_year}</td>\r\n\r\n                      <td>\r\n                        <button\r\n                          onClick={removeInfo(data.eid, \"edu\")}\r\n                          className=\"btn-flat  create-resuem-table-remove-btn\"\r\n                        >\r\n                          <i className=\"far fa-trash-alt\"></i>\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan={resumeTemplate === 1 ? \"4\" : \"3\"}>No Data</td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div className=\"col s12 m4 offset-m1 input-field\">\r\n        <input\r\n          id=\"create_resume_qualification\"\r\n          type=\"text\"\r\n          className=\"validate\"\r\n          value={qualification_title}\r\n          onChange={changeHandler(\"qualification_title\", \"edu\")}\r\n        />\r\n        <label htmlFor=\"create_resume_qualification\">Qualification</label>\r\n      </div>\r\n      <div className=\"col s12 m4 input-field\">\r\n        <input\r\n          id=\"create_resume_school_collage\"\r\n          type=\"text\"\r\n          className=\"validate\"\r\n          value={institute}\r\n          onChange={changeHandler(\"institute\", \"edu\")}\r\n        />\r\n        <label htmlFor=\"create_resume_school_collage\">\r\n          School/Collage Name\r\n        </label>\r\n      </div>\r\n      {resumeTemplate === 1 && (\r\n        <div className=\"col s12 m4 offset-m1 input-field\">\r\n          <input\r\n            id=\"create_resume_board_university\"\r\n            type=\"text\"\r\n            className=\"validate\"\r\n            value={board}\r\n            onChange={changeHandler(\"board\", \"edu\")}\r\n          />\r\n          <label htmlFor=\"create_resume_board_university\">\r\n            Board/University\r\n          </label>\r\n        </div>\r\n      )}\r\n      <div\r\n        className={\r\n          resumeTemplate !== 1\r\n            ? \"col s12 m4 offset-m1 input-field\"\r\n            : \"col s12 m4  input-field\"\r\n        }\r\n      >\r\n        <input\r\n          id=\"create_resume_passing_year\"\r\n          type=\"text\"\r\n          className=\"validate\"\r\n          value={passing_year}\r\n          onChange={changeHandler(\"passing_year\", \"edu\")}\r\n        />\r\n        <label htmlFor=\"create_resume_passing_year\">Passing Year</label>\r\n      </div>\r\n      <div className=\"col s12 m4 input-field center\">\r\n        <button\r\n          className=\"btn waves-effect waves-light\"\r\n          onClick={addInfo(\"edu\")}\r\n        >\r\n          ADD\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const experianceInfoForm = (\r\n    <div className=\"row basic-template-row\">\r\n      <div className=\"s12 col create-resume-section-heading\">\r\n        Experience Info\r\n      </div>\r\n      <div className=\"row education-table-row\">\r\n        <div className=\"col s12 m4 offset-m1 input-field\">\r\n          <div className=\"smallheading\">Fresher</div>\r\n          <div className=\"switch\">\r\n            <label>\r\n              Off\r\n              <input\r\n                type=\"checkbox\"\r\n                value={fresher}\r\n                onChange={changeHandler(\"fresher\", \"fresher\")}\r\n              />\r\n              <span className=\"lever\"></span>\r\n              On\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {fresher ? (\r\n        \"\"\r\n      ) : (\r\n        <Fragment>\r\n          <div className=\"row education-table-row\">\r\n            <div className=\"col s12 m10 offset-m1 education-table-wrapper\">\r\n              <table className=\"highlight responsive-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Organization</th>\r\n                    <th>Position</th>\r\n                    <th>Joining Date</th>\r\n                    <th>Leaving Date</th>\r\n                    <th>Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {experience ? (\r\n                    experience.map((expe, index) => {\r\n                      return (\r\n                        <tr key={index}>\r\n                          <td>{expe.organisation}</td>\r\n                          <td>{expe.position}</td>\r\n                          <td>\r\n                            {expe.joining_month + \",\" + expe.joining_year}\r\n                          </td>\r\n                          <td>\r\n                            {expe.leaving_month + \",\" + expe.leaving_year}\r\n                          </td>\r\n                          <td>\r\n                            <button\r\n                              onClick={removeInfo(expe.exp_id, \"exp\")}\r\n                              className=\"btn-flat create-resuem-table-remove-btn\"\r\n                            >\r\n                              <i className=\"far fa-trash-alt\"></i>\r\n                            </button>\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"4\">No Data</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col s12 m4 offset-m1 input-field\">\r\n              <input\r\n                id=\"create_resume_exp_organozation\"\r\n                type=\"text\"\r\n                className=\"validate\"\r\n                value={organisation}\r\n                onChange={changeHandler(\"organisation\", \"exp\")}\r\n              />\r\n              <label htmlFor=\"create_resume_exp_organozation\">\r\n                Organization\r\n              </label>\r\n            </div>\r\n            <div className=\"col s12 m4 input-field\">\r\n              <input\r\n                id=\"create_resume_exp_position\"\r\n                type=\"text\"\r\n                className=\"validate\"\r\n                value={position}\r\n                onChange={changeHandler(\"position\", \"exp\")}\r\n              />\r\n              <label htmlFor=\"create_resume_exp_position\">Position</label>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col s6 m2 offset-m1 input-field\">\r\n              <select\r\n                value={joining_month}\r\n                onChange={changeHandler(\"joining_month\", \"exp\")}\r\n              >\r\n                <option value=\"null\" disabled>\r\n                  Select Month\r\n                </option>\r\n                {addMonth().map((month) => {\r\n                  return (\r\n                    <option key={month.value} value={month.value}>\r\n                      {month.label}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n\r\n              <label>Joining Month</label>\r\n            </div>\r\n            <div className=\"col s6 m2 input-field\">\r\n              <select\r\n                value={joining_year}\r\n                onChange={changeHandler(\"joining_year\", \"exp\")}\r\n              >\r\n                <option value=\"null\" disabled>\r\n                  Select Year\r\n                </option>\r\n                {addYears().map((year) => {\r\n                  return (\r\n                    <option key={year.value} value={year.value}>\r\n                      {year.label}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n\r\n              <label>Joining Year</label>\r\n            </div>\r\n            <div className=\"col s6 m2  input-field\">\r\n              <select\r\n                value={leaving_month}\r\n                onChange={changeHandler(\"leaving_month\", \"exp\")}\r\n              >\r\n                <option value=\"null\" disabled>\r\n                  Select Month\r\n                </option>\r\n                {addMonth().map((month) => {\r\n                  return (\r\n                    <option key={month.value} value={month.value}>\r\n                      {month.label}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n\r\n              <label>Leaving month</label>\r\n            </div>\r\n            <div className=\"col s6 m2 input-field\">\r\n              <select\r\n                value={leaving_year}\r\n                onChange={changeHandler(\"leaving_year\", \"exp\")}\r\n              >\r\n                <option value=\"null\" disabled>\r\n                  Select Year\r\n                </option>\r\n                {addYears().map((year) => {\r\n                  return (\r\n                    <option key={year.value} value={year.value}>\r\n                      {year.label}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n\r\n              <label>Leaving Year</label>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col s12 m4 offset-m1 input-field\">\r\n            <button\r\n              className=\"btn waves-effect waves-light\"\r\n              onClick={addInfo(\"exp\")}\r\n            >\r\n              ADD\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const experianceInfoFormType2 = (\r\n    <div className=\"row basic-template-row\">\r\n      <div className=\"s12 col create-resume-section-heading\">\r\n        Experience Info\r\n      </div>\r\n      <div className=\"row education-table-row\">\r\n        <div className=\"col s12 m4 offset-m1 input-field\">\r\n          <div className=\"smallheading\">Fresher</div>\r\n          <div className=\"switch\">\r\n            <label>\r\n              Off\r\n              <input\r\n                type=\"checkbox\"\r\n                value={fresher}\r\n                onChange={changeHandler(\"fresher\", \"fresher\")}\r\n              />\r\n              <span className=\"lever\"></span>\r\n              On\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {fresher ? (\r\n        \"\"\r\n      ) : (\r\n        <Fragment>\r\n          <div className=\"row education-table-row\">\r\n            <div className=\"col s12 m10 offset-m1 experience-view-wrapper\">\r\n              {experience\r\n                ? experience.map((expe, index) => {\r\n                    return (\r\n                      <div key={index} className=\"row\">\r\n                        <div className=\"col s10 m10\">\r\n                          <div className=\"exp-list-org\">\r\n                            {expe.organisation}\r\n                          </div>\r\n                          <div className=\"exp-list-position\">\r\n                            {expe.position}\r\n                          </div>\r\n\r\n                          <div className=\"exp-list-dates\">\r\n                            {expe.joining_month +\r\n                              \",\" +\r\n                              expe.joining_year +\r\n                              \" - \" +\r\n                              expe.leaving_month +\r\n                              \",\" +\r\n                              expe.leaving_year}\r\n                          </div>\r\n                          <div className=\"exp-list-work-details\">\r\n                            {expe.work_details.map((data, index) => {\r\n                              return <div key={index}>{data.workDetail}</div>;\r\n                            })}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col s2 m2\">\r\n                          <button\r\n                            onClick={removeInfo(expe.exp_id, \"exp\")}\r\n                            className=\"btn-flat create-resuem-table-remove-btn\"\r\n                          >\r\n                            <i className=\"far fa-trash-alt\"></i>\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })\r\n                : \"\"}\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col s12 m4 offset-m1 input-field\">\r\n              <input\r\n                id=\"create_resume_exp_organozation\"\r\n                type=\"text\"\r\n                className=\"validate\"\r\n                value={organisation}\r\n                onChange={changeHandler(\"organisation\", \"exp\")}\r\n              />\r\n              <label htmlFor=\"create_resume_exp_organozation\">\r\n                Organization\r\n              </label>\r\n            </div>\r\n            <div className=\"col s12 m4 input-field\">\r\n              <input\r\n                id=\"create_resume_exp_position\"\r\n                type=\"text\"\r\n                className=\"validate\"\r\n                value={position}\r\n                onChange={changeHandler(\"position\", \"exp\")}\r\n              />\r\n              <label htmlFor=\"create_resume_exp_position\">Position</label>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col s12 m8 offset-m1 input-field\">\r\n              {work_details.map((data, index) => {\r\n                return (\r\n                  <div className=\"row\">\r\n                    <div className=\"col s8 m8\">{data.workDetail}</div>\r\n                    <div className=\"col s4 m4\">\r\n                      <button\r\n                        onClick={removeInfo(data.work_id, \"work\")}\r\n                        className=\"btn-flat create-resuem-table-remove-btn\"\r\n                      >\r\n                        <i className=\"far fa-trash-alt\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n\r\n              <div className=\"row\"></div>\r\n            </div>\r\n            <div className=\"col s12 m4 offset-m1 input-field\">\r\n              <input\r\n                id=\"create_resume_exp_work_details\"\r\n                type=\"text\"\r\n                className=\"validate\"\r\n                value={workDetail}\r\n                onChange={changeHandler(\"workDetail\", \"work\")}\r\n              />\r\n              <label htmlFor=\"create_resume_exp_work_details\">\r\n                Work Details\r\n              </label>\r\n            </div>\r\n            <div className=\"col s12 m4\">\r\n              <button\r\n                className=\"btn waves-effect waves-light\"\r\n                onClick={addInfo(\"work\")}\r\n              >\r\n                ADD\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col s6 m2 offset-m1 input-field\">\r\n              <select\r\n                value={joining_month}\r\n                onChange={changeHandler(\"joining_month\", \"exp\")}\r\n              >\r\n                <option value=\"null\" disabled>\r\n                  Select Month\r\n                </option>\r\n                {addMonth().map((month) => {\r\n                  return (\r\n                    <option key={month.value} value={month.value}>\r\n                      {month.label}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n\r\n              <label>Joining Month</label>\r\n            </div>\r\n            <div className=\"col s6 m2 input-field\">\r\n              <select\r\n                value={joining_year}\r\n                onChange={changeHandler(\"joining_year\", \"exp\")}\r\n              >\r\n                <option value=\"null\" disabled>\r\n                  Select Year\r\n                </option>\r\n                {addYears().map((year) => {\r\n                  return (\r\n                    <option key={year.value} value={year.value}>\r\n                      {year.label}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n\r\n              <label>Joining Year</label>\r\n            </div>\r\n            <div className=\"col s6 m2  input-field\">\r\n              <select\r\n                value={leaving_month}\r\n                onChange={changeHandler(\"leaving_month\", \"exp\")}\r\n              >\r\n                <option value=\"null\" disabled>\r\n                  Select Month\r\n                </option>\r\n                {addMonth().map((month) => {\r\n                  return (\r\n                    <option key={month.value} value={month.value}>\r\n                      {month.label}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n\r\n              <label>Leaving month</label>\r\n            </div>\r\n            <div className=\"col s6 m2 input-field\">\r\n              <select\r\n                value={leaving_year}\r\n                onChange={changeHandler(\"leaving_year\", \"exp\")}\r\n              >\r\n                <option value=\"null\" disabled>\r\n                  Select Year\r\n                </option>\r\n                {addYears().map((year) => {\r\n                  return (\r\n                    <option key={year.value} value={year.value}>\r\n                      {year.label}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n\r\n              <label>Leaving Year</label>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col s12 m4 offset-m1 input-field\">\r\n            <button\r\n              className=\"btn waves-effect waves-light\"\r\n              onClick={addInfo(\"exp\")}\r\n            >\r\n              ADD\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const diploma_certificateInfoForm = (\r\n    <div className=\"row basic-template-row\">\r\n      <div className=\"s12 col create-resume-section-heading\">\r\n        Diplomas/Certificates\r\n      </div>\r\n      <div className=\"row education-table-row\">\r\n        <div className=\"col s12 m10 offset-m1 education-table-wrapper\">\r\n          <table className=\"highlight responsive-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Course Title</th>\r\n                <th>Institute</th>\r\n\r\n                {resumeTemplate === 1 && <th>Course Duration (in Month)</th>}\r\n                <th>Date of completion (Month,Year)</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {certificates_diplomas ? (\r\n                certificates_diplomas.map((data, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{data.diploma_title}</td>\r\n                      <td>{data.diploma_institute}</td>\r\n\r\n                      {resumeTemplate === 1 && <td>{data.course_duration}</td>}\r\n                      <td>{data.date_of_completion}</td>\r\n                      <td>\r\n                        <button\r\n                          onClick={removeInfo(data.diploma_id, \"dips\")}\r\n                          className=\"btn-flat  create-resuem-table-remove-btn\"\r\n                        >\r\n                          <i className=\"far fa-trash-alt\"></i>\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan={resumeTemplate === 1 ? \"5\" : \"4\"}>No Data</td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div className=\"col s12 m4 offset-m1 input-field\">\r\n        <input\r\n          id=\"create_resume_diploma_title\"\r\n          type=\"text\"\r\n          className=\"validate\"\r\n          value={diploma_title}\r\n          onChange={changeHandler(\"diploma_title\", \"dips\")}\r\n        />\r\n        <label htmlFor=\"create_resume_diploma_title\">Course Name</label>\r\n      </div>\r\n      <div className=\"col s12 m4 input-field\">\r\n        <input\r\n          id=\"create_resume_diploma_institute\"\r\n          type=\"text\"\r\n          className=\"validate\"\r\n          value={diploma_institute}\r\n          onChange={changeHandler(\"diploma_institute\", \"dips\")}\r\n        />\r\n        <label htmlFor=\"create_resume_diploma_institute\">Institute</label>\r\n      </div>\r\n\r\n      {resumeTemplate === 1 && (\r\n        <div className=\"col s12 m4  offset-m1 input-field\">\r\n          <input\r\n            id=\"create_resume_course_duration\"\r\n            type=\"text\"\r\n            className=\"validate\"\r\n            value={course_duration}\r\n            onChange={changeHandler(\"course_duration\", \"dips\")}\r\n          />\r\n          <label htmlFor=\"create_resume_course_duration\">\r\n            Course Duration (in months)\r\n          </label>\r\n        </div>\r\n      )}\r\n      <div\r\n        className={\r\n          resumeTemplate !== 1\r\n            ? \"col s12 m4 offset-m1  input-field\"\r\n            : \"col s12 m4  input-field\"\r\n        }\r\n      >\r\n        <input\r\n          id=\"create_resume_date_of_completion\"\r\n          type=\"text\"\r\n          className=\"validate\"\r\n          value={date_of_completion}\r\n          onChange={changeHandler(\"date_of_completion\", \"dips\")}\r\n        />\r\n        <label htmlFor=\"create_resume_date_of_completion\">\r\n          Date of completion (Month,Year/ ex. January, 2019)\r\n        </label>\r\n      </div>\r\n      <div className=\"col s12 m4 input-field center\">\r\n        <button\r\n          className=\"btn waves-effect waves-light\"\r\n          onClick={addInfo(\"dips\")}\r\n        >\r\n          ADD\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const skillInfoForm = (\r\n    <div className=\"row basic-template-row\">\r\n      <div className=\"s12 col create-resume-section-heading\">Skills</div>\r\n      <div className=\"row education-table-row\">\r\n        <div className=\"col s12 m10 offset-m1 education-table-wrapper\">\r\n          <table className=\"highlight responsive-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Skill </th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {skills ? (\r\n                skills.map((data) => {\r\n                  return (\r\n                    <tr key={data.skill}>\r\n                      <td>{data.skill}</td>\r\n                      <td>\r\n                        <button\r\n                          onClick={removeInfo(data.skill_id, \"skills\")}\r\n                          className=\"btn-flat  create-resuem-table-remove-btn\"\r\n                        >\r\n                          <i className=\"far fa-trash-alt\"></i>\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan=\"2\">No Data</td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div className=\"col s12 m4 offset-m1 input-field\">\r\n        <input\r\n          id=\"create_resume_skills\"\r\n          type=\"text\"\r\n          className=\"validate\"\r\n          value={skill}\r\n          onChange={changeHandler(\"skill\", \"skills\")}\r\n        />\r\n        <label htmlFor=\"create_resume_skills\">Skill</label>\r\n      </div>\r\n      <div className=\"col s12 m4 input-field center\">\r\n        <button\r\n          className=\"btn waves-effect waves-light\"\r\n          onClick={addInfo(\"skills\")}\r\n        >\r\n          ADD\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n  const skillInfoFormType2 = (\r\n    <div className=\"row basic-template-row\">\r\n      <div className=\"s12 col create-resume-section-heading\">Skills</div>\r\n      <div className=\"row education-table-row\">\r\n        <div className=\"col s12 m10 offset-m1 education-table-wrapper\">\r\n          <table className=\"highlight responsive-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Skill </th>\r\n                <th>Skill Level</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {skills ? (\r\n                skills.map((data, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{data.skill}</td>\r\n                      <td>\r\n                        <div className=\"progress skill-progress-bar\">\r\n                          <div\r\n                            className=\"determinate\"\r\n                            style={{ width: `${data.skill_level}%` }}\r\n                          ></div>\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <button\r\n                          onClick={removeInfo(data.skill_id, \"skills\")}\r\n                          className=\"btn-flat  create-resuem-table-remove-btn\"\r\n                        >\r\n                          <i className=\"far fa-trash-alt\"></i>\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan=\"3\">No Data</td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div className=\"col s12 m4 offset-m1 input-field\">\r\n        <input\r\n          id=\"create_resume_skills\"\r\n          type=\"text\"\r\n          className=\"validate\"\r\n          value={skill}\r\n          onChange={changeHandler(\"skill\", \"skills\")}\r\n        />\r\n        <label htmlFor=\"create_resume_skills\">Skill</label>\r\n      </div>\r\n      <div className=\"col s12 m4\">\r\n        <p className=\"skill-label\">Skill Level</p>\r\n        <p className=\"range-field skill-range\">\r\n          <input\r\n            type=\"range\"\r\n            className=\"myRange\"\r\n            value={skill_level}\r\n            min=\"0\"\r\n            max=\"100\"\r\n            onInput={changeHandler(\"skill_level\", \"skills\")}\r\n            onChange={changeHandler(\"skill_level\", \"skills\")}\r\n          />\r\n        </p>\r\n      </div>\r\n      <div className=\"col s12 m4 center\">\r\n        <button\r\n          className=\"btn waves-effect waves-light\"\r\n          onClick={addInfo(\"skills\")}\r\n        >\r\n          ADD\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n  const submitButton = (\r\n    <div className=\"row\">\r\n      <div className=\"col s12 m4 offset-m1  create-resume-save-button\">\r\n        <button\r\n          onClick={submitResumeInfo}\r\n          className=\"waves-effect waves-light btn\"\r\n        >\r\n          Update Details and Download\r\n        </button>\r\n      </div>\r\n      <div className=\"col s12 m4   create-resume-save-button\">\r\n        <button\r\n          onClick={getPreview}\r\n          data-target=\"PDFpreview\"\r\n          className=\"btn modal-trigger\"\r\n        >\r\n          Preview\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const pageHeading = (\r\n    <div className=\"row  create-resume-heading-container\">\r\n      <div className=\"col s12 create-resume-heading\">Create Resume</div>\r\n    </div>\r\n  );\r\n\r\n  const templateForm1 = (\r\n    <Fragment>\r\n      {pageHeading}\r\n      <div className=\"create-resume-form-container\">\r\n        {basicInfoForm}\r\n        {contactInfoForm}\r\n        {addressInfoForm}\r\n        {experianceInfoForm}\r\n        {academicQualificationForm}\r\n        {diploma_certificateInfoForm}\r\n        {skillInfoForm}\r\n        {submitButton}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n  const templateForm2 = (\r\n    <Fragment>\r\n      {pageHeading}\r\n      <div className=\"create-resume-form-container\">\r\n        {basicInfoForm}\r\n        {contactInfoForm}\r\n        {addressInfoForm}\r\n        {experianceInfoForm}\r\n        {academicQualificationForm}\r\n        {diploma_certificateInfoForm}\r\n        {skillInfoForm}\r\n        {submitButton}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n  const templateForm3 = (\r\n    <Fragment>\r\n      {pageHeading}\r\n      <div className=\"create-resume-form-container\">\r\n        {basicInfoForm}\r\n        {contactInfoForm}\r\n        {addressInfoForm}\r\n        {experianceInfoFormType2}\r\n        {academicQualificationForm}\r\n        {diploma_certificateInfoForm}\r\n        {skillInfoFormType2}\r\n        {submitButton}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n\r\n  const templateForm4 = (\r\n    <Fragment>\r\n      {pageHeading}\r\n      <div className=\"create-resume-form-container\">\r\n        {basicInfoForm}\r\n        {contactInfoForm}\r\n        {addressInfoForm}\r\n        {experianceInfoFormType2}\r\n        {academicQualificationForm}\r\n        {diploma_certificateInfoForm}\r\n        {skillInfoFormType2}\r\n        {submitButton}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n  const templateForm5 = (\r\n    <Fragment>\r\n      {pageHeading}\r\n      <div className=\"create-resume-form-container\">\r\n        {basicInfoForm}\r\n        {contactInfoForm}\r\n        {addressInfoForm}\r\n        {experianceInfoFormType2}\r\n        {academicQualificationForm}\r\n        {diploma_certificateInfoForm}\r\n        {skillInfoForm}\r\n        {submitButton}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n  const templateForm6 = (\r\n    <Fragment>\r\n      {pageHeading}\r\n      <div className=\"create-resume-form-container\">\r\n        {basicInfoForm}\r\n        {contactInfoForm}\r\n        {addressInfoForm}\r\n        {experianceInfoFormType2}\r\n        {academicQualificationForm}\r\n        {diploma_certificateInfoForm}\r\n        {skillInfoForm}\r\n        {submitButton}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n\r\n  const selectForm = () => {\r\n    switch (resumeTemplate) {\r\n      case 1:\r\n        return templateForm1;\r\n\r\n      case 2:\r\n        return templateForm2;\r\n\r\n      case 3:\r\n        return templateForm3;\r\n\r\n      case 4:\r\n        return templateForm4;\r\n\r\n      case 5:\r\n        return templateForm5;\r\n\r\n      case 6:\r\n        return templateForm6;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  return (\r\n    <BaseWrapper>\r\n      {selectForm()}\r\n      <PDFpreviewModal\r\n        previewHandler={getPreview}\r\n        isTrue={preview}\r\n        templateId={resumeTemplate ? resumeTemplate.toString() : \"\"}\r\n        resumeInfo={resume}\r\n      />\r\n      {performRedirect()}\r\n    </BaseWrapper>\r\n  );\r\n}\r\n\r\nexport default UpdateResume;\r\n","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\user\\TotalResumeChart.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\user\\PolarTemplateChart.js",[],["284","285"],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\pdfGenration\\templates\\Template2.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\pdfGenration\\templates\\Template3.js",[],["286","287"],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\pdfGenration\\templates\\Template5.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\pdfGenration\\templates\\Template4.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\pdfGenration\\templates\\Template6.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\core\\ContactUs.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\core\\helper\\apicalls.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\user\\TotalResumeMonthBarChart.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\admin\\AllUsers.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\admin\\AllResumes.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\admin\\helper\\apicalls.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\core\\NumberCard.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\admin\\RegistrationActivityChart.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\admin\\VerificationHourlyChart.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\admin\\HourResumeChart.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\admin\\AllResumesChartTemplates.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\admin\\AllResumeChart.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\admin\\UsersChart.js",[],"C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\core\\SocialCard.js",["288"],"import React from \"react\";\r\nimport \"./css/socialCard.css\";\r\n\r\nconst SocialCard = ({\r\n  iconBackground = \"#61dbfb\",\r\n  socialCardIcon = \"fa-react\",\r\n  linkData = \"#\",\r\n  idTitle = \"ID ID ID\",\r\n  dis = \"discrioption\",\r\n}) => {\r\n  return (\r\n    <div className=\"socialCardWarpper\">\r\n      <div className=\"cardFace face1  z-depth-3\">\r\n        <a href={linkData} target=\"_blank\" className=\"socialIdTitle\">\r\n          {idTitle}\r\n        </a>\r\n        <p className=\"socialCardDiscription\">{dis}</p>\r\n      </div>\r\n      <div className=\"cardFace face2\" style={{ background: iconBackground }}>\r\n        <div className=\"socialCardIcon\">\r\n          <i className={\"socialIcons fab \" + socialCardIcon}></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SocialCard;\r\n","C:\\Users\\Win 10\\Desktop\\My Projects\\ResumeCreator\\backend\\client\\src\\user\\Profile.js",[],{"ruleId":"289","replacedBy":"290"},{"ruleId":"291","replacedBy":"292"},{"ruleId":"289","replacedBy":"293"},{"ruleId":"291","replacedBy":"294"},{"ruleId":"289","replacedBy":"295"},{"ruleId":"291","replacedBy":"296"},{"ruleId":"289","replacedBy":"297"},{"ruleId":"291","replacedBy":"298"},{"ruleId":"289","replacedBy":"299"},{"ruleId":"291","replacedBy":"300"},{"ruleId":"289","replacedBy":"301"},{"ruleId":"291","replacedBy":"302"},{"ruleId":"303","severity":1,"message":"304","line":18,"column":11,"nodeType":"305","messageId":"306","endLine":18,"endColumn":18},{"ruleId":"303","severity":1,"message":"307","line":18,"column":20,"nodeType":"305","messageId":"306","endLine":18,"endColumn":25},{"ruleId":"303","severity":1,"message":"308","line":18,"column":27,"nodeType":"305","messageId":"306","endLine":18,"endColumn":34},{"ruleId":"303","severity":1,"message":"307","line":19,"column":29,"nodeType":"305","messageId":"306","endLine":19,"endColumn":34},{"ruleId":"303","severity":1,"message":"309","line":83,"column":5,"nodeType":"305","messageId":"306","endLine":83,"endColumn":8},{"ruleId":"303","severity":1,"message":"310","line":108,"column":5,"nodeType":"305","messageId":"306","endLine":108,"endColumn":11},{"ruleId":"303","severity":1,"message":"311","line":116,"column":23,"nodeType":"305","messageId":"306","endLine":116,"endColumn":30},{"ruleId":"303","severity":1,"message":"312","line":126,"column":31,"nodeType":"305","messageId":"306","endLine":126,"endColumn":39},{"ruleId":"303","severity":1,"message":"313","line":143,"column":5,"nodeType":"305","messageId":"306","endLine":143,"endColumn":15},{"ruleId":"303","severity":1,"message":"304","line":24,"column":11,"nodeType":"305","messageId":"306","endLine":24,"endColumn":18},{"ruleId":"303","severity":1,"message":"308","line":24,"column":20,"nodeType":"305","messageId":"306","endLine":24,"endColumn":27},{"ruleId":"303","severity":1,"message":"314","line":31,"column":11,"nodeType":"305","messageId":"306","endLine":31,"endColumn":19},{"ruleId":"303","severity":1,"message":"315","line":31,"column":21,"nodeType":"305","messageId":"306","endLine":31,"endColumn":29},{"ruleId":"303","severity":1,"message":"316","line":31,"column":5,"nodeType":"305","messageId":"306","endLine":31,"endColumn":9},{"ruleId":"303","severity":1,"message":"304","line":43,"column":11,"nodeType":"305","messageId":"306","endLine":43,"endColumn":18},{"ruleId":"303","severity":1,"message":"309","line":61,"column":5,"nodeType":"305","messageId":"306","endLine":61,"endColumn":8},{"ruleId":"303","severity":1,"message":"310","line":86,"column":5,"nodeType":"305","messageId":"306","endLine":86,"endColumn":11},{"ruleId":"303","severity":1,"message":"311","line":94,"column":23,"nodeType":"305","messageId":"306","endLine":94,"endColumn":30},{"ruleId":"303","severity":1,"message":"312","line":104,"column":31,"nodeType":"305","messageId":"306","endLine":104,"endColumn":39},{"ruleId":"303","severity":1,"message":"313","line":121,"column":5,"nodeType":"305","messageId":"306","endLine":121,"endColumn":15},{"ruleId":"289","replacedBy":"317"},{"ruleId":"291","replacedBy":"318"},{"ruleId":"289","replacedBy":"319"},{"ruleId":"291","replacedBy":"320"},{"ruleId":"321","severity":1,"message":"322","line":14,"column":28,"nodeType":"323","endLine":14,"endColumn":43},"no-native-reassign",["324"],"no-negated-in-lhs",["325"],["324"],["325"],["324"],["325"],["324"],["325"],["324"],["325"],["324"],["325"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'success' is assigned a value but never used.","'eid' is assigned a value but never used.","'exp_id' is assigned a value but never used.","'work_id' is assigned a value but never used.","'skill_id' is assigned a value but never used.","'diploma_id' is assigned a value but never used.","'rloading' is assigned a value but never used.","'rsuccess' is assigned a value but never used.","'date' is assigned a value but never used.",["324"],["325"],["324"],["325"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation"]